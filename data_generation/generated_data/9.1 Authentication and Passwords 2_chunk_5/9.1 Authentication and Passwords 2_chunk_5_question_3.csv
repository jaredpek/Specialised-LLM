input,output
What is salting in the context of password storage?,"Salting is a security measure in password storage where a unique, randomly generated string, known as a **salt**, is added to each password as part of the hashing process. This process makes it significantly harder for attackers to crack large numbers of hashes."
How does salting work to enhance password security?,"Salting works by adding a unique, randomly generated string, called a **salt**, to each password before it is hashed. Because the salt is unique for every user, an attacker must crack hashes one at a time using the respective salt, rather than calculating a hash once and comparing it against every stored hash. This direct proportionality of time required to the number of hashes makes cracking large numbers of hashes significantly harder."
Why is salting effective against attackers attempting to crack passwords?,"Salting is effective because it forces attackers to crack hashes one at a time. Since a **salt** (a unique, randomly generated string) is added to each password before hashing, an attacker cannot pre-compute hashes using methods like rainbow tables or database-based lookups. The time required to crack passwords grows in direct proportion to the number of hashes, making large-scale attacks impractical."
What additional protections does salting offer beyond making individual hash cracking harder?,"Beyond making individual hash cracking harder, salting also protects against an attacker pre-computing hashes using **rainbow tables** (pre-computed tables for reversing cryptographic hash functions) or database-based lookups. Furthermore, salting makes it impossible to determine whether two users have the same password without cracking the hashes, because different salts will result in different hashes even if the underlying passwords are identical."
How does salting prevent an attacker from determining if two users share the same password?,"Salting prevents an attacker from determining if two users share the same password because a unique **salt** (a unique, randomly generated string) is added to each password before hashing. This means that even if two users have the exact same password, the different salts applied to them will result in entirely different hash values. Consequently, an attacker cannot simply compare hash values to identify identical passwords; they would need to crack each hash individually."
Which modern hashing algorithms automatically salt passwords?,"Modern hashing algorithms such as Argon2id, bcrypt, and PBKDF2 automatically salt the passwords. This means that no additional steps are required from the user or system administrator to incorporate salting when using these algorithms, simplifying secure password storage."
What is the benefit of modern hashing algorithms automatically salting passwords?,"The benefit of modern hashing algorithms automatically salting passwords is that no additional steps are required when using them. This simplifies the implementation of secure password storage practices, ensuring that passwords are automatically protected with a unique **salt** (a unique, randomly generated string) as part of the hashing process, without manual intervention."
What is the primary characteristic of modern password hashing algorithms?,"The primary characteristic of modern password hashing algorithms, designed for securely storing passwords, is that they should be slow. This slowness is a deliberate design choice to make brute-force attacks and other cracking attempts computationally expensive and time-consuming for attackers, unlike traditional cryptographic hashes (like SHA family & KECCAK) which are designed to be fast."
Why are modern password hashing algorithms designed to be slow?,"Modern password hashing algorithms are designed to be slow to make it significantly harder and more time-consuming for attackers to perform brute-force attacks or crack large numbers of hashes. This deliberate slowness increases the computational cost for an attacker, thereby enhancing security. The degree of slowness can often be configured by changing the **work factor**."
How can the slowness of modern password hashing algorithms be configured?,"The slowness of modern password hashing algorithms can be configured by changing the **work factor**. The **work factor** is a parameter that controls the computational cost of the hashing function, allowing administrators to adjust the processing time required for each hash operation. A higher work factor means a slower hashing process, which increases the difficulty for attackers trying to crack passwords."
What is Argon2 in the context of password hashing?,"Argon2 is a modern password hashing algorithm that was the winner of the 2015 Password Hashing Competition. It is specifically designed for securely storing passwords and is characterized by its configurable slowness, which makes it resistant to brute-force attacks and GPU-based cracking."
What is bcrypt and when should it be used for password storage?,"Bcrypt is a password hashing function specifically designed for secure password storage. It should be used as the second choice for password storage if Argon2 is not available. Like other modern hashing algorithms, bcrypt is designed to be slow and incorporates salting automatically to resist brute-force attacks and rainbow table attacks."
What is the difference between modern password hashing algorithms and crypto hashes like SHA family or KECCAK?,"The primary difference is their design goal: modern password hashing algorithms (like Argon2, bcrypt, PBKDF2) are specifically designed to be slow for securely storing passwords, making brute-force attacks computationally expensive. In contrast, crypto hashes such as the SHA family and KECCAK are designed to be fast for general-purpose cryptographic applications like data integrity checks, where speed is a desirable characteristic."
What is a 'work factor' in the context of password hashing algorithms?,"A **work factor** is a configurable parameter in modern password hashing algorithms that determines how slow the hashing process will be. By adjusting the work factor, the computational cost and time required to compute a hash can be increased or decreased. A higher work factor makes it more difficult and time-consuming for attackers to crack passwords through brute-force methods."
"What are the potential drawbacks of forcing users to use long, complex, system-generated, and frequently changed passwords?","Forcing users to use long, complex, system-generated, and frequently changed passwords can lead to several drawbacks: users may have difficulty memorizing complex passwords, difficulty dealing with frequent password changes, and may find ways of re-using their favorite password. These behaviors can inadvertently lead to users writing down passwords, which compromises security."
Why might users have difficulty memorizing complex passwords?,"Users might have difficulty memorizing complex passwords because these passwords often consist of a mix of upper and lower case characters, numerical symbols, and other non-alphabetical symbols, and are sometimes system-generated, making them hard to recall. This difficulty can lead to users writing them down, which is a security risk."
What issues can arise from users having to deal with frequent password changes?,"Issues that can arise from users having to deal with frequent password changes include difficulty remembering new passwords, which might lead them to choose simpler, more guessable passwords, or to revert to old passwords. It can also lead to users writing down their passwords to keep track of them, which compromises security."
What common behavior might users resort to when faced with complex password requirements?,"When faced with complex password requirements, users might resort to finding ways of re-using their favorite password, or they might write down their passwords on a piece of paper kept close to the computer. Both behaviors can undermine the intended security benefits of complex password policies."
What is the consequence if users write down their passwords?,"If users write down their passwords, typically on a piece of paper kept close to the computer, it creates a significant security vulnerability. An attacker gaining physical access to the user's workspace could easily find and compromise the password, bypassing digital security measures."
Why is it important to set a password for a user account?,"It is important to set a password for a user account because if there is no password, an attacker does not even have to guess it. They can simply gain unauthorized access to the account, compromising the system's security without any effort."
What is the risk associated with not setting a password for a user account?,"The risk associated with not setting a password for a user account is that an attacker does not even have to guess it. This means unauthorized access can be gained effortlessly, as there is no barrier to entry, making the system highly vulnerable to compromise."
Why should default passwords be changed?,"Default passwords should be changed because they often have common, easily guessable values, such as ""manager."" While they help field engineers install the system, if left unchanged, they provide an easy entry point for an attacker to break in, as these default values are widely known or easily discoverable."
Can you provide an example of a common default password value?,"A common default password value for system accounts is often something like ""manager."" Such predictable default passwords pose a significant security risk if not changed, as they are widely known and can be easily exploited by attackers."
How do default passwords assist field engineers during system installation?,"Default passwords assist field engineers during system installation by providing a known, pre-configured credential that allows them to access and set up the system. This streamlines the installation process, but it also creates a security vulnerability if these default passwords are not subsequently changed."
What is the security risk if default passwords are left unchanged?,"If default passwords are left unchanged, the security risk is that an attacker can easily break into the system. Default passwords are often common and widely known (e.g., ""manager""), making them a straightforward target for unauthorized access, as the attacker doesn't need to guess or crack a unique password."
What measures can be taken to avoid guessable passwords?,"To avoid guessable passwords, several measures can be taken: prescribe a minimal password length, enforce a specific password format that mixes upper and lower case (case-sensitive), includes numerical and other non-alphabetical symbols (alphanumeric). Additionally, users should be aware that today, online dictionaries for almost every language exist, which attackers can use for dictionary attacks."
What is the recommended format for strong passwords?,"The recommended format for strong passwords is to mix upper and lower case characters (making it **case-sensitive**), and to include numerical and other non-alphabetical symbols (making it **alphanumeric**). Additionally, a minimal password length should be prescribed to further enhance security."
What does 'case-sensitive' mean in the context of password format?,"In the context of password format, 'case-sensitive' means that the system distinguishes between uppercase and lowercase letters. For example, 'Password123' would be considered different from 'password123'. This requirement increases the complexity and number of possible combinations, making passwords harder to guess or crack."
What does 'alphanumeric' mean when describing password symbols?,"When describing password symbols, 'alphanumeric' refers to characters that include both alphabetical letters (A-Z, a-z) and numerical digits (0-9). In the context of strong password policies, it often implies including a mix of these, along with other non-alphabetical symbols, to increase complexity."
"What is the role of online dictionaries in password security, and how does it relate to guessable passwords?","Online dictionaries play a significant role in password security because attackers can use them to perform **dictionary attacks** (an attempt to break into a password-protected computer system by systematically entering every word in a dictionary as a password). This relates to guessable passwords because if a user chooses a password that is a common word or phrase found in a dictionary, it becomes highly vulnerable to such attacks. Therefore, password policies often recommend avoiding dictionary words and using complex combinations of characters."
What is password ageing?,"Password ageing is a security policy that involves setting expiry dates for passwords to force users to change their passwords regularly. It also typically includes measures to prevent users from reverting to old passwords, such as keeping a list of the last ""ten"" passwords used."
What is the purpose of setting expiry dates for passwords?,"The purpose of setting expiry dates for passwords is to force users to change their passwords regularly. This practice reduces the window of opportunity for an attacker to use a compromised password, as even if a password is stolen, it will eventually become invalid, requiring the attacker to obtain a new one."
How can users be prevented from reverting to old passwords as part of a password ageing policy?,"As part of a password ageing policy, users can be prevented from reverting to old passwords by keeping a list of previously used passwords, for example, the last ""ten"" passwords. When a user attempts to change their password, the system checks this list and rejects the new password if it matches any of the recent ones, ensuring that users create genuinely new passwords."
What is the policy of limiting login attempts?,"The policy of limiting login attempts involves the system monitoring unsuccessful login attempts and reacting by locking the user account. This lock can be complete or for a given time interval, and its purpose is to prevent or discourage further unauthorized attempts, such as brute-force attacks."
How does limiting login attempts work to enhance security?,"Limiting login attempts enhances security by monitoring and reacting to unsuccessful login attempts. If a certain number of failed attempts occur within a specified period, the system will lock the user account, either completely or for a given time interval. This mechanism prevents or discourages brute-force attacks, where an attacker tries numerous password combinations until one works."
What is the purpose of informing the user after a successful login?,"The purpose of informing the user after a successful login is to warn them about recently attempted attacks. By displaying information such as the time of the last login and the number of failed login attempts since, the user can identify suspicious activity and take appropriate action if their account has been targeted."
What information should be displayed to the user after a successful login to enhance security awareness?,"After a successful login, to enhance security awareness and warn the user about recently attempted attacks, the system should display the time of the last login and the number of failed login attempts since that last successful login. This allows the user to quickly spot any unusual activity."
How does displaying login information after a successful login help warn users about attacks?,"Displaying login information after a successful login helps warn users about attacks by providing them with critical security data. If a user sees a last login time that doesn't match their activity or a high number of failed login attempts, it signals that their account might have been targeted. This awareness allows them to report suspicious activity or change their password proactively."
What is a passphrase as an alternative form of password?,"A passphrase is an alternative form of password where a user enters sentences or long phrases that are easy to remember. The system then applies a hash function to compute the actual fixed-size password from this passphrase, providing a more user-friendly yet secure authentication method."
How does a system handle a passphrase for authentication?,"When a user enters a passphrase for authentication, the system applies a **hash function** (a mathematical algorithm that converts an input of arbitrary length into a fixed-size output) to compute the actual fixed-size password. This computed password is then used for verification, allowing users to use memorable sentences or long phrases while maintaining the security benefits of hashed passwords."
What are visual drawing patterns as an alternative password method?,"Visual drawing patterns are an alternative password method primarily used on touch interfaces, such as those found in Android devices. Users authenticate by drawing a specific pattern on a grid or set of points, which the system then verifies. This method leverages spatial memory rather than alphanumeric recall."
Where are visual drawing patterns commonly used as an authentication method?,"Visual drawing patterns are commonly used as an authentication method on touch interfaces, notably in Android operating systems. Users draw a specific pattern on the screen to unlock their device or access applications, leveraging a different modality for authentication than traditional text-based passwords."
What are picture passwords?,"Picture passwords are an alternative authentication method where users select specific objects in pictures and patterns. This method relies on visual recognition and spatial memory for authentication, rather than memorizing a string of characters. They were notably used in Windows 8."
In which operating system were picture passwords notably used?,"Picture passwords were notably used in Windows 8 as an alternative authentication method. Users would select objects in pictures and patterns to log in, offering a visual and interactive way to secure their accounts."
What are one-time passwords (OTPs)?,"One-time passwords (OTPs) are an alternative form of password that is valid for only a single login session or transaction. They are typically generated by a token or an application and provide enhanced security by making replay attacks impossible, as a compromised OTP cannot be reused."
What is a password file?,"A password file is a file maintained by the operating system that stores user names and their corresponding passwords. This file is critical for user authentication and system security, making it a prime target for attackers."
What are the potential risks associated with a password file?,"The potential risks associated with a password file are that an attacker could try to compromise its confidentiality or integrity. Compromising confidentiality means gaining unauthorized access to the stored passwords, while compromising integrity means altering the password data, both of which can lead to unauthorized system access."
What are the primary options for protecting a password file?,"The primary options for protecting a password file include cryptographic protection, access control enforced by the operating system, or a combination of both cryptographic protection and access control. Further measures, such as those designed to slow down dictionary attacks, can also be implemented in conjunction with these options."
How can cryptographic protection be used to secure a password file?,"Cryptographic protection can be used to secure a password file by encrypting its contents. This means that even if an attacker gains unauthorized access to the file, the stored passwords would be unreadable without the decryption key, thus preserving their confidentiality. This is often combined with hashing passwords before encryption."
What is access control enforced by the operating system for password file protection?,"Access control enforced by the operating system for password file protection refers to mechanisms that restrict who can read, write, or execute the password file. The operating system's security features ensure that only authorized users or processes (e.g., the authentication service) can access the file, preventing unauthorized individuals from directly viewing or modifying its contents."
How can cryptographic protection and access control be combined to protect a password file?,"Cryptographic protection and access control can be combined to protect a password file by first encrypting the file's contents (cryptographic protection) and then enforcing operating system-level access controls to restrict who can even access the encrypted file. This layered approach provides robust security, as an attacker would need to bypass both the access controls and then decrypt the file to compromise the passwords. This combination can also include further measures to slow down dictionary attacks."
