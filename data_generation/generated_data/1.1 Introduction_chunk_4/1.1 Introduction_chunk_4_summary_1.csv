input,output
Summarize the design principles of a Trusted Computing Base (TCB).,"The design principles of a Trusted Computing Base (TCB) include being Unbypassable, Tamper-resistant, and Verifiable.\n\n*   **Unbypassable (completeness):** This principle dictates that there must be no method to breach system security by circumventing the TCB.\n*   **Tamper-resistant (security):** The TCB must be protected from other system components outside of the TCB, meaning these external parts cannot alter the TCB's code or its operational state.\n*   **Verifiable (or correctness):** It must be possible to confirm the correctness of the TCB's operations and implementation."
Explain the significance of the size of a Trusted Computing Base (TCB).,"The size of a Trusted Computing Base (TCB) is significant because a smaller TCB is generally more trustworthy and easier to verify. This is due to the reduced number of assumptions that need to be made, which might otherwise be violated. This concept aligns with the KISS (Keep It Simple, Stupid) principle. However, designing a secure system with a smaller TCB can be more challenging, as it necessitates considering a greater number of potential malicious entities."
"What is the KISS (Keep It Simple, Stupid) principle in the context of TCB design?","The KISS (Keep It Simple, Stupid) principle, in the context of Trusted Computing Base (TCB) design, suggests that systems should be kept as simple as possible. For TCBs, this means that a smaller TCB is more trustworthy and easier to verify because fewer assumptions are needed, reducing the likelihood of vulnerabilities arising from complex interactions or overlooked details."
Describe the different types of attackers based on their actions.,Attackers can be categorized into two main types based on their actions: active and passive.\n\n*   **Active attacker:** An active attacker manipulates or disrupts systems. Examples include modifying data or injecting code.\n*   **Passive attacker:** A passive attacker observes and gathers information without interfering with the system.
Summarize the different levels of knowledge an attacker might possess.,"An attacker's knowledge can vary significantly. Some attackers may possess detailed knowledge, knowing the system's design, architecture, and source code. Conversely, other attackers may lack this detailed knowledge and must rely on probing or trial and error to understand and exploit the system."
What are the key considerations regarding an attacker's capability?,Key considerations regarding an attacker's capability include:\n\n*   **Computing resources:** How much computing power and resources the attacker can leverage.\n*   **System interaction:** Which parts of the system the attacker can interact with.\n*   **Time constraints:** Whether the attacker has unlimited time or needs to act quickly to achieve their objectives.
Provide an overview of the common security properties as defined by the CIA model.,"The common security properties, often referred to as the CIA model, represent the security goals for a system. These properties are Confidentiality, Integrity, and Availability.\n\n*   **Confidentiality (C):** Aims to prevent unauthorized disclosure of information, ensuring sensitive data is not leaked to unauthorized parties.\n*   **Integrity (I):** Focuses on preventing unauthorized modification of information, ensuring critical system state and code cannot be altered by malicious parties.\n*   **Availability (A):** Seeks to prevent unauthorized withholding of information or resources, ensuring that resources are always accessible to authorized users."
Define Confidentiality as a security property and provide examples of threats.,"**Confidentiality (C)** is a security property that aims to prevent the unauthorized disclosure of information. Its goal is to ensure that sensitive information is not leaked to unauthorized parties.\n\nExamples of threats to confidentiality include eavesdropping, packet sniffing, and illegal copying of data."
Define Integrity as a security property and illustrate with examples of threats.,"**Integrity (I)** is a security property focused on preventing the unauthorized modification of information. It ensures that critical system state and code cannot be altered by malicious parties.\n\nExamples of threats to integrity include intercepting packets, modifying them, and then releasing them."
Define Availability as a security property and provide an example of a threat.,**Availability (A)** is a security property that aims to prevent the unauthorized withholding of information or resources. It ensures that the system's resources are always available for authorized users.\n\nAn example of a threat to availability is the disruption of services.
What is Accountability in the context of security properties?,"**Accountability** is a security property that ensures the actions of an entity within a system can be traced and identified. This means that who did what, and when, can be determined."
Explain the security property of Non-repudiation.,**Non-repudiation** is a security property that provides unforgeable evidence that specific actions occurred. This prevents an entity from falsely denying that they performed a particular action.
Define Authenticity as a security property.,"**Authenticity** is a security property that ensures the communicated entity is indeed the correct and genuine entity it claims to be. It verifies the identity of users, processes, or systems."
What is the purpose of Anonymity or Privacy as a security property?,**Anonymity or privacy** is a security property designed to hide personal information and identity from being leaked to external parties. Its purpose is to protect an individual's identity and sensitive personal data.
Describe the security property of Verifiability.,**Verifiability** is a security property that ensures a system's operations can be independently verified. This means that external parties or mechanisms can confirm the correctness and integrity of the system's processes.
Explain the security property of Freshness.,"**Freshness** is a security property that guarantees data or communications are current and have not been reused or replayed. It prevents attacks where old, legitimate messages are retransmitted to achieve an unauthorized effect."
What is Fault Tolerance in the context of security properties?,**Fault tolerance** is a security property that enables a system to continue functioning correctly despite failures. It ensures resilience and continuous operation even when components or processes encounter issues.
What are the general components typically considered in a threat model?,"A threat model typically considers three general components:\n\n*   **Trusted Computing Base (TCB):** This defines which parts of the system are assumed to be trustworthy.\n*   **Adversarial capabilities and knowledge:** This outlines what an attacker is capable of doing and what information they possess.\n*   **Security properties:** These are the specific security goals that the system aims to achieve, such as confidentiality, integrity, or availability."
Describe the Trusted Computing Base (TCB) assumption in the Target attack threat model.,"In the Target attack threat model, the Trusted Computing Base (TCB) assumption was that the Target computer system, including its operating system (OS) and hardware, was trusted. However, the malicious software (malware) was explicitly *not* trusted, as it was responsible for leaking data to the attacker."
Summarize the adversarial capabilities and knowledge assumed in the Target attack threat model.,"In the Target attack threat model, the assumed adversarial capabilities and knowledge included the attacker's ability to launch malware on Target's Point-of-Sale (POS) systems. This malware was capable of collecting credit card data stored in the database."
Which security property was the primary concern in the Target attack threat model?,"In the Target attack threat model, the primary security property of concern was **Confidentiality**. The goal was to protect the system from leaking sensitive information, specifically credit card data."
"What was the name of the malware used in the Target attack, and what type of malware was it?","The malware used in the Target attack was named ""Trojan.POSRAM."" It was identified as a type of malware known as a **RAM scraper**, which collects unencrypted payment card information from the POS terminal's memory after it is swiped."
Describe the path taken by the stolen credit card data during the Target attack.,"During the Target attack, the stolen credit card data was first quietly moved around on Target's internal network. Subsequently, it was transmitted in chunks to a U.S.-based server that the attackers had hijacked, and finally, it was sent to a server in Russia."
What type of data was collected by the malware in the Target attack?,The malware in the Target attack collected unencrypted payment card information. This data was gathered just after it was swiped at Target and while it resided in a POS terminal's memory.
How did the Target malware evade detection?,"The Target malware, Trojan.POSRAM, contained a new attack method that enabled it to evade forensic detection and conceal data transfers, making it hard to detect. While similar to BlackPOS, it incorporated these advanced evasion techniques."
Summarize the three main security strategies.,"The three main security strategies are Prevention, Detection, and Reaction.\n\n*   **Prevention:** Involves taking measures to stop a system from being damaged in the first place.\n*   **Detection:** Focuses on implementing measures to identify when, how, and by whom a system has been damaged.\n*   **Reaction:** Consists of taking steps to recover the system from damage, including preparing for worst-case outcomes by assuming that adverse events will occur."
Explain the Prevention security strategy.,The **Prevention** security strategy involves taking proactive measures that prevent your system from being damaged. The goal is to stop security incidents from occurring by implementing safeguards and controls.
Describe the Detection security strategy.,"The **Detection** security strategy involves taking measures designed to identify when, how, and by whom your system has been damaged. Its purpose is to recognize security incidents as they happen or after they have occurred, enabling a timely response."
"What is the Reaction security strategy, and what core assumption does it include?","The **Reaction** security strategy involves taking measures to recover your system from damage. A core assumption within this strategy is to always assume that bad things will happen, and therefore, systems should be prepared for the worst-case outcome to facilitate recovery."
Summarize the design principle of Least of Privilege.,"The design principle of **Least of Privilege** dictates that privileges should be assigned carefully. This means giving each entity only the minimal permissions required to complete its specific task. Privileges should be granted only when needed and revoked immediately after use. The less privilege a program has, the less harm it can cause if it goes awry or becomes subverted. Granting unnecessary permissions creates a vulnerability that a malicious entity could abuse to perform an attack."
What are the benefits of adhering to the Least of Privilege principle?,"Adhering to the **Least of Privilege** principle offers several benefits. It minimizes the potential harm a program can cause if it is compromised or behaves unexpectedly, as it only has access to the resources absolutely necessary for its function. It also reduces the attack surface, making it harder for malicious entities to abuse unnecessary permissions to perform attacks."
Provide an example of the Least of Privilege principle in practice related to user accounts.,"An example of the **Least of Privilege** principle in practice related to user accounts is to never perform personal activities using a root or administrator (admin) account in an operating system (OS). These accounts have extensive privileges, and using them for routine tasks unnecessarily exposes the system to higher risk if compromised."
Illustrate the Least of Privilege principle with an example concerning smartphone applications.,"An illustration of the **Least of Privilege** principle concerning smartphone applications is a photo editing application that is only allowed access to the device's gallery. It is explicitly *not* granted access to the microphone or location, as these permissions are unnecessary for its core function of editing photos, thereby limiting potential misuse."
Summarize the design principle of Separation of Privilege.,"The design principle of **Separation of Privilege** involves splitting responsibility for privileged actions. To perform a privileged action, it requires multiple parties to work together to exercise that privilege, rather than relying on a single point of control or decision. This approach minimizes the risk of misuse, error, or compromise by ensuring that no single entity has full control over critical processes."
What is the primary purpose of the Separation of Privilege design principle?,"The primary purpose of the **Separation of Privilege** design principle is to minimize the risk of misuse, error, or compromise within a system. It achieves this by ensuring that no single entity has full control over critical processes, requiring multiple parties to collaborate for privileged actions, thereby distributing responsibility and reducing the impact of a single point of failure or malicious intent."
Provide an example of the Separation of Privilege principle in a financial system.,"In a financial system, an example of the **Separation of Privilege** principle is when transferring large sums of money. This action requires approval from an employee (the initiator) and an additional approval from a manager (the reviewer). This ensures that no single individual can unilaterally authorize a high-value transaction, minimizing the risk of fraud or error."
Illustrate the Separation of Privilege principle with an example from software development and deployment.,"An illustration of the **Separation of Privilege** principle in software development and deployment is when a developer writes code but cannot directly deploy it to production. Instead, deployment is handled by a separate operations team. This separation ensures that the person who writes the code is not the sole person responsible for releasing it to live systems, reducing the risk of malicious code or errors being introduced without independent review or control."
What is a Trusted Computing Base (TCB)?,"A **Trusted Computing Base (TCB)** refers to the set of all hardware, firmware, and software components that are critical to enforcing the security policy of a system. Its design principles include being unbypassable, tamper-resistant, and verifiable, meaning there should be no way to breach system security by bypassing it, it should be protected from external modification, and its correctness should be verifiable."
Explain the relationship between the size of a TCB and its trustworthiness.,"There is an inverse relationship between the size of a Trusted Computing Base (TCB) and its trustworthiness. A system with a smaller TCB is considered more trustworthy and easier to verify. This is because a smaller TCB requires fewer assumptions to be made about its components, reducing the potential for vulnerabilities or design flaws that could be exploited."
What is the primary challenge in designing a secure system with a smaller TCB?,"The primary challenge in designing a secure system with a smaller Trusted Computing Base (TCB) is that it becomes more demanding. This is because with a smaller TCB, designers need to consider a greater number of malicious entities or potential attack vectors that might interact with the system's reduced trusted core, requiring more rigorous security analysis and protection mechanisms."
Differentiate between an active attacker and a passive attacker.,"The key difference between an active attacker and a passive attacker lies in their interaction with the system.\n\n*   An **active attacker** manipulates or disrupts systems, engaging in actions such as modifying data or injecting code.\n*   A **passive attacker**, in contrast, observes and gathers information without interfering with the system's operations."
Discuss the implications of an attacker having detailed system knowledge versus relying on probing and trial and error.,"The implications of an attacker's knowledge level are significant. An attacker who knows the system's design, architecture, and source code can identify vulnerabilities and plan attacks more efficiently and precisely. Conversely, an attacker who lacks detailed knowledge and must rely on probing or trial and error will likely take more time, make more attempts, and potentially leave more traces, making their attacks less efficient but still potentially effective through persistence."
What is the overarching goal of defining security properties for a system?,"The overarching goal of defining security properties for a system is to establish the specific security objectives that the system aims to achieve. These properties, such as Confidentiality, Integrity, and Availability (CIA model), along with others like Accountability and Non-repudiation, guide the design, implementation, and evaluation of security mechanisms to protect the system and its data from various threats."
Distinguish between Confidentiality and Integrity as security properties.,"While both are critical security properties, **Confidentiality** and **Integrity** address different aspects of information protection.\n\n*   **Confidentiality** focuses on preventing unauthorized *disclosure* of information, ensuring that sensitive data is only accessible to authorized parties.\n*   **Integrity** focuses on preventing unauthorized *modification* of information, ensuring that data remains accurate, complete, and unaltered by unauthorized entities."
Explain the difference between Accountability and Non-repudiation.,"Both **Accountability** and **Non-repudiation** relate to tracking actions, but they differ in their strength of evidence.\n\n*   **Accountability** ensures that the actions of an entity can be traced and identified, meaning you can determine who did what.\n*   **Non-repudiation** goes a step further by providing *unforgeable evidence* that specific actions occurred, preventing an entity from successfully denying that they performed an action."
"What was the assumed role of the Trusted Computing Base (TCB) in the Target attack scenario, and how was it challenged?","In the Target attack scenario, the assumed role of the Trusted Computing Base (TCB) was that the Target computer system, including its OS and hardware, was trusted. This assumption was challenged because malicious software (malware) was successfully launched on the POS systems, indicating that the TCB, while assumed trusted, was ultimately compromised or bypassed in a way that allowed the untrusted malware to operate and leak data."
What was the significance of the payment card information being unencrypted in the Target attack?,"The significance of the payment card information being **unencrypted** in the Target attack was critical. The ""Trojan.POSRAM"" malware collected this data just after it was swiped and while it resided in the POS terminal's memory, meaning it was in a readable, unprotected format. This made the stolen data immediately usable by the attackers without requiring further decryption, greatly increasing the impact and value of the breach."
What is the core idea behind 'assigning privileges carefully' in the Least of Privilege principle?,"The core idea behind 'assigning privileges carefully' in the **Least of Privilege** principle is to grant each entity (user, program, process) only the absolute minimum set of permissions or access rights necessary to perform its intended function, and no more. This practice limits the potential damage if that entity is compromised or misused, as its capabilities are inherently restricted."
What is the core idea behind 'splitting responsibility' in the Separation of Privilege principle?,"The core idea behind 'splitting responsibility' in the **Separation of Privilege** principle is to distribute control over critical actions or processes among multiple distinct entities. This means that no single individual or component has unilateral authority to perform a sensitive operation, requiring collaboration or multiple approvals. This significantly reduces the risk of error, misuse, or malicious activity by a single compromised party."
Compare the design principles of Least of Privilege and Separation of Privilege.,"Both **Least of Privilege** and **Separation of Privilege** are fundamental security design principles, but they address different aspects of access control and risk mitigation.\n\n*   **Least of Privilege** focuses on *minimizing the permissions granted to any single entity* (user, process, program) to only what is strictly necessary for its task. This limits the potential damage if that entity is compromised.\n*   **Separation of Privilege** focuses on *distributing control over critical actions among multiple entities*, requiring collaboration or multiple approvals for sensitive operations. This prevents any single entity from having complete control over critical processes, thereby reducing the risk of misuse, error, or compromise."
