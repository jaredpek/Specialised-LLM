input,output
Provide a comprehensive summary of a Capability List (C-List) in the context of access control.,"A Capability List (C-List) is an access control mechanism that specifies authorized objects and operations for a particular user. In practice, an access control matrix, which defines permissions for subjects (users) over objects (resources), is often sparse. A C-List implements this matrix by decomposing it by rows, meaning each list is associated with a specific user and details what that user can do. This approach is particularly convenient for determining the access rights available to a specific user."
"Summarize how an access control matrix can be implemented using decomposition by rows, specifically mentioning C-Lists.","An access control matrix, which is often sparse in practice, can be implemented by decomposition in one of two ways. One method is decomposition by rows, which leads to the creation of a Capability List (C-List). A C-List specifies the authorized objects and the operations a particular user can perform on them. This structure is convenient for quickly determining the access rights available to a specific user."
Can you summarise the key considerations behind resource management in a Unix OS?,"In a Unix Operating System (OS), various entities such as files, directories, memory devices, and I/O devices are uniformly treated as resources. These resources are the fundamental objects of access control. A key consideration is that each resource has a single user owner and a single group owner, which dictates a primary layer of access control and permission management."
"What are the different types of file permissions in Unix-like systems, and for whom are they defined?","In Unix-like systems, there are three primary types of permissions: Read, Write, and Execute. These permissions are defined for three distinct subjects: the Owner, the Group, and Other users. The Owner is the user who owns the file or resource. The Group refers to a set of users who share access rights to the file. Other refers to all other users on the system who are not the owner and not part of the designated group."
"Explain the meaning of the Unix permission string ""rw-r--r--"".","The Unix permission string ""rw-r--r--"" signifies specific access rights for different subjects. ""rw-"" grants read and write access to the owner of the file. The first ""r--"" grants read access to the group associated with the file. The second ""r--"" grants read access to all other users on the system. In summary, the owner can read and write, while the group and others can only read."
"Describe the permissions represented by the string ""rwx------"".","The permission string ""rwx------"" indicates that the owner of the file has read, write, and execute access. The subsequent ""------"" segments denote that neither the group nor any other users have any rights (read, write, or execute) to the file. This means access is exclusively granted to the file's owner."
"How are Unix permissions represented in octal notation? Provide examples for ""rw-r--r--"" and ""rwx------"".","Unix permissions can be represented in octal notation, where each permission (read, write, execute) for each subject (owner, group, other) is assigned a numerical value. Read is 4, Write is 2, and Execute is 1. These values are summed for each subject. \n\nFor ""rw-r--r--"":\n*   Owner: Read (4) + Write (2) = 6\n*   Group: Read (4) = 4\n*   Other: Read (4) = 4\nSo, the octal representation is 644.\n\nFor ""rwx------"":\n*   Owner: Read (4) + Write (2) + Execute (1) = 7\n*   Group: No permissions = 0\n*   Other: No permissions = 0\nSo, the octal representation is 700."
"What command is used to change file permissions in Unix, and provide an example using octal notation.","The `chmod` command is used to change file permissions in Unix-like operating systems. An example using octal notation is `chmod 754 filename`. In this command, `754` is the octal representation of the desired permissions, where `7` grants read, write, and execute to the owner, `5` grants read and execute to the group, and `4` grants read access to others."
Explain how to change file permissions using symbolic mode with the `chmod` command.,"File permissions can be adjusted using symbolic mode with the `chmod` command. An example is `chmod u+wrx,g+rx,g-w,o+r,o-wx filename`. This command modifies permissions for the user (u), group (g), and others (o). `u+wrx` adds write, read, and execute permissions for the user. `g+rx` adds read and execute for the group, while `g-w` removes write permission from the group. `o+r` adds read for others, and `o-wx` removes write and execute permissions from others."
"What command is used to change the ownership of a file in Unix, and provide an example.","The `chown` command is used by the root user to change the ownerships of a file in Unix-like operating systems. An example is `chown user:group filename`. In this command, `user` specifies the new owner of the file, and `group` specifies the new group owner for the file."
"Summarize the role of superuser privilege in executing certain OS functions, using password changing as an example.","Superuser privilege is essential for executing certain operating system functions that require elevated access. A prime example is changing user passwords. User passwords are typically stored in a sensitive file like `/etc/shadow`, which is owned by the root superuser. A normal user has no direct access to this file. When a normal user wishes to change their password using a program like `passwd`, this program needs to temporarily acquire additional permissions, specifically root privileges, to write the new password to `/etc/shadow`."
Define SUID and explain its primary function in program execution.,"SUID, which stands for Set User ID, is a special permission flag for a program. Its primary function is to allow a user who executes the program to inherit the permissions of the program's owner. This means that if a program owned by the root user has the SUID flag enabled, any user executing that program will temporarily gain root privileges for the duration of the program's execution, enabling it to perform actions that would normally require superuser access."
How does the `passwd` program utilize SUID to allow normal users to change their passwords?,"The `passwd` program utilizes SUID to allow normal users to change their passwords by temporarily granting them elevated privileges. The `/etc/shadow` file, where user passwords are stored, is owned by the root superuser and is inaccessible to normal users. When a normal user executes the `passwd` program, and if `passwd` has the SUID flag enabled, the user inherits the program owner's (root's) permissions. This allows the `passwd` program to write the new password to the `/etc/shadow` file, even though the executing user normally lacks the necessary permissions."
How is the SUID permission flag represented in a file's permission string?,"The SUID permission flag is represented in a file's permission string by an 's' character in place of the 'x' (execute) permission for the owner. For example, if a file's owner permissions are typically `rwx` (read, write, execute), with SUID enabled, it would appear as `rws` (read, write, Set User ID). This 's' indicates that the execute permission is present, and the SUID flag is active."
List some other SUID programs commonly found with root ownership.,"Several other SUID programs are commonly found with root ownership to perform specific system functions. These include: \n*   `/bin/login`: Used for user login processes. \n*   `/bin/at`: Used for batch job submission, allowing users to schedule commands to be executed at a later time. \n*   `/bin/su`: Used to change the User ID (UID), typically allowing a user to switch to another user's account, often the root account."
Summarize the potential dangers associated with SUID programs.,"The potential dangers associated with SUID programs stem from the fact that the executing user temporarily gains the program owner's privileges. This can be exploited in two main ways: \n1.  **Unintended actions:** The program might perform actions beyond what the owner intended, especially if it's not carefully designed. \n2.  **Attacker exploitation:** An attacker could trick a SUID program, particularly one owned by root, into performing unintended operations. By manipulating the program's input or environment, an attacker could effectively act as the root user, gaining unauthorized control over the system."
What are the key security considerations when dealing with SUID programs?,"When dealing with SUID programs, several key security considerations must be observed to mitigate risks: \n1.  **Careful input processing:** All user input, including command-line arguments and environment variables, must be processed with extreme care to prevent malicious manipulation. \n2.  **Necessity of SUID status:** Programs should only be granted SUID status if it is absolutely necessary for their intended function. Unnecessary SUID permissions increase the attack surface. \n3.  **Integrity monitoring:** The integrity of SUID programs must be continuously monitored to detect any unauthorized modifications or tampering that could lead to security vulnerabilities."
"What are the main purposes of logging, monitoring, and auditing in a system?","The main purposes of logging, monitoring, and auditing in a system are multifaceted: \n1.  **Intrusion detection:** To identify unauthorized access attempts or system changes. \n2.  **Forensics and investigation:** To provide historical data crucial for incident response and post-incident analysis. \n3.  **Accountability:** To track user actions and commands, establishing a record of who did what. \n4.  **Performance monitoring:** To assist in debugging applications and diagnosing system performance issues."
"Summarize the challenges associated with implementing effective logging, monitoring, and auditing.","Implementing effective logging, monitoring, and auditing presents several challenges: \n1.  **High storage and processing requirements:** There's a need to precisely select and record only the most critical data to manage the significant storage and processing demands. \n2.  **Log integrity:** Attackers may attempt to erase or modify logs to cover their tracks, necessitating robust protection mechanisms like encryption and access control for log data. \n3.  **User privacy:** Logging and monitoring activities can potentially compromise user privacy, requiring strict adherence to compliance and data retention policies."
What types of data does an Operating System (OS) collect for monitoring purposes?,"An Operating System (OS) collects different types of data at various layers for monitoring purposes: \n*   **System call traces:** These describe the activities or behaviors of processes running within the system. \n*   **Log files:** These contain information on user activity, including login records and command history. \n*   **File integrity checksums:** These are used to periodically scan critical files for changes and compare cryptographic checksums against known good values. \n*   **Registry access:** This monitors access to the system registry, specific to Windows operating systems. \n*   **Kernel and driver-level monitoring:** This provides insight into OS kernel-level anomalies. \n*   **Resource usage:** This includes CPU, memory, or I/O utilization and activities, which can indicate malicious behaviors. \n*   **Network activities:** This encompasses established connections and received packets."
Define an Intrusion Detection System (IDS) and its primary goal.,"An Intrusion Detection System (IDS) is a system specifically designed to detect unauthorized intrusions into computer systems. Its primary goal is to identify and alert administrators to suspicious activities or security policy violations that could indicate a compromise or attack, thereby helping to protect the integrity, confidentiality, and availability of system resources."
What are the different layers at which an Intrusion Detection System (IDS) can be implemented?,"An Intrusion Detection System (IDS) can be implemented at different layers within a computing environment. The two main types mentioned are network-based IDS (NIDS) and host-based IDS (HIDS). Network-based IDS monitors network traffic for suspicious patterns, while host-based IDS focuses on monitoring the characteristics and activities of a single host for suspicious behaviors."
Describe the three logical components that comprise an Intrusion Detection System (IDS).,"An Intrusion Detection System (IDS) comprises three logical components: \n1.  **Sensors:** These components are responsible for collecting data from the monitored environment. This data can include network traffic, system logs, file changes, and other relevant information. \n2.  **Analyzers:** These components are responsible for processing the collected data to determine if an intrusion has occurred. They identify patterns, anomalies, or signatures that indicate malicious activity and can provide evidence and guidance on actions to take as a result of the intrusion. \n3.  **User interface:** This component enables a user to view the output from the IDS, such as alerts and reports, and to control the behavior and configuration of the system."
What is the purpose of a host-based Intrusion Detection System (IDS)?,"A host-based Intrusion Detection System (IDS) primarily focuses on monitoring the characteristics of a single host for suspicious activities. Its purpose is to detect unauthorized intrusions or malicious behaviors that occur directly on a specific computer system, by analyzing local system calls, log files, file integrity, and other host-specific data."
Explain the concept of a 'Link counter' in Unix resource management.,"In Unix resource management, a 'Link counter' refers to the number of links, specifically directory entries, that point to a particular file. Each time a hard link is created to a file, its link counter increases. The file's data is only removed from the disk when its link counter reaches zero, meaning no directory entries are pointing to it anymore."
What information is typically included in a Unix log file for monitoring purposes?,"A Unix log file typically includes information on user activity for monitoring purposes. This encompasses details such as user login records, providing a history of who accessed the system and when, as well as a history of commands executed by users, which helps in tracking actions and identifying suspicious behavior."
What is the significance of 'File integrity checksums' in monitoring data?,"File integrity checksums are significant in monitoring data because they allow for the detection of unauthorized changes to critical files. This involves periodically scanning these files and comparing their cryptographic checksums against a record of known good values. Any discrepancy indicates that a file has been altered, potentially by an attacker or due to system corruption, serving as a crucial mechanism for intrusion detection."
"Describe the role of 'Registry access' monitoring, and specify which OS it is relevant to.","'Registry access' monitoring involves tracking and auditing access to the system registry. The registry is a hierarchical database that stores configuration settings and options for the operating system and applications. This type of monitoring is specifically relevant to Windows operating systems, as Unix-like systems do not use a registry in the same manner."
How does 'Kernel and driver-level monitoring' contribute to system security?,"'Kernel and driver-level monitoring' contributes to system security by providing insight into OS kernel-level anomalies. The kernel is the core of the operating system, and drivers are software components that allow the OS to interact with hardware. Monitoring these low-level activities can detect sophisticated attacks or rootkits that operate at the kernel level, which might bypass higher-level security controls."
How can 'Resource usage' monitoring indicate malicious behaviors?,"'Resource usage' monitoring, which tracks CPU, memory, or I/O utilization and activities, can indicate malicious behaviors by identifying unusual patterns. For example, a sudden spike in CPU usage by an unknown process, excessive memory consumption, or abnormal I/O operations could be symptomatic of malware execution, denial-of-service attacks, or other unauthorized activities that consume system resources beyond normal operational parameters."
What kind of information is captured under 'Network activities' for monitoring purposes?,"For monitoring purposes, 'Network activities' capture information related to network communications. This includes details about established connections, such as source and destination IP addresses and ports, as well as information about received packets. Monitoring network activities helps in detecting unauthorized network access, data exfiltration, command-and-control communications from malware, and other network-based threats."
Provide a comprehensive summary of the file types recognized in Unix OS.,"In a Unix Operating System, various file types are recognized, each denoted by a specific character: \n*   **'-'**: Represents a regular file, which contains data. \n*   **'d'**: Denotes a directory, which is a container for other files and directories. \n*   **'s'**: Indicates a socket, used for inter-process communication. \n*   **'b'**: Refers to a block device file, which provides buffered access to hardware devices like hard drives. \n*   **'l'**: Signifies a symbolic link (symlink), which is a pointer to another file or directory. \n*   **'c'**: Represents a character device file, which provides unbuffered access to hardware devices like terminals or printers."
"What are the components of a typical file entry in a Unix-like system, as shown in the example?","A typical file entry in a Unix-like system, as illustrated, includes several components that provide detailed information about the resource: \n*   **File type**: Indicates the nature of the file (e.g., regular file, directory, symbolic link). \n*   **File permissions**: Specifies read, write, and execute rights for the owner, group, and others. \n*   **Link counter**: Shows the number of directory entries pointing to the file. \n*   **Username**: Identifies the user owner of the file. \n*   **Group name**: Identifies the group owner of the file. \n*   **File size**: Indicates the size of the file in bytes. \n*   **Modified date/time**: Shows the last time the file was modified."
Summarize the benefits of using a C-List for access control.,"The primary benefit of using a Capability List (C-List) for access control is its convenience when determining the access rights available to a specific user. By organizing permissions by user (decomposition by rows), a C-List allows for a direct and efficient lookup of all authorized objects and operations that a particular user can perform, simplifying the process of understanding a user's privileges."
Explain how the `chmod` command with octal 754 affects file permissions.,"The `chmod` command with octal 754 sets specific file permissions. The '7' for the owner grants read (4), write (2), and execute (1) permissions, totaling 7. The '5' for the group grants read (4) and execute (1) permissions, totaling 5, but no write permission. The '4' for others grants only read (4) permission, with no write or execute rights. Thus, the owner has full control, the group can read and execute, and others can only read."
"What is the purpose of the `chown` command, and who typically uses it?","The `chown` command is used to change the ownerships of a file or directory. This command allows for specifying both a new user owner and a new group owner for a given file. It is typically used by the root user, as changing ownership is a privileged operation that can affect system security and access control."
Describe the concept of 'Controlled Invocation' in the context of OS security.,"'Controlled Invocation' refers to a mechanism where certain operating system functions, which normally require superuser privilege, can be invoked by less privileged users under specific, controlled conditions. This is often achieved through special permission flags like SUID, allowing programs to temporarily elevate their privileges to perform necessary tasks on behalf of a normal user, such as changing a password, without granting the user full superuser access."
"Where are user passwords stored in a Unix-like system, and what are its ownership characteristics?","In a Unix-like system, user passwords are stored in the file `/etc/shadow`. This file is highly sensitive and is owned by the root superuser. Crucially, a normal user has no direct access to this file, ensuring that password hashes are protected from unauthorized viewing or modification by regular users."
What is the difference between network-based IDS and host-based IDS?,"The difference between network-based IDS (Intrusion Detection System) and host-based IDS lies in their scope of monitoring. A network-based IDS monitors network traffic across a segment or entire network to detect intrusions, while a host-based IDS monitors the characteristics and activities of a single, specific computer system (host) for suspicious activities. The document primarily focuses on host-based IDS."
Explain how an attacker can exploit a SUID program owned by root.,"An attacker can exploit a SUID program owned by root by tricking it into performing unintended actions. Since the user running a SUID program inherits the program owner's privileges (in this case, root), if the program has vulnerabilities or can be manipulated through user input (like command-line arguments or environment variables), an attacker could craft specific inputs to make the program execute arbitrary commands or access restricted resources, effectively acting as the root user."
What is the role of 'Sensors' within an Intrusion Detection System (IDS)?,"Within an Intrusion Detection System (IDS), 'Sensors' are responsible for collecting data. These components gather raw information from the monitored environment, which can include system logs, network packets, file system changes, and other relevant system activities. This collected data is then fed to the analyzers for further processing and intrusion detection."
What is the function of 'Analyzers' in an IDS?,"The function of 'Analyzers' in an Intrusion Detection System (IDS) is to process the data collected by the sensors to determine if an intrusion has occurred. They use various techniques to identify suspicious patterns, anomalies, or known attack signatures. Upon detecting an intrusion, analyzers are also responsible for identifying possible evidence related to the event and may provide guidance on what actions to take as a result of the intrusion."
How does the 'User interface' component of an IDS facilitate interaction?,"The 'User interface' component of an Intrusion Detection System (IDS) facilitates interaction by enabling a user to view the output from the system. This output typically includes alerts, reports, and status information regarding detected intrusions or system health. Additionally, the user interface allows the user to control the behavior of the system, such as configuring monitoring parameters, setting up alerts, or managing responses to detected threats."
Summarize the concept of an access control matrix and its practical implementation.,"An access control matrix is a conceptual model that defines permissions for subjects (users) over objects (resources). In practice, this matrix is usually sparse, meaning most subjects do not have access to most objects. It can be implemented by decomposition in one of two ways: by rows, leading to Capability Lists (C-Lists) which specify authorized objects and operations for a particular user; or by columns, leading to Access Control Lists (ACLs), which specify which users have what permissions for a particular object."
What does the 'drwxrwxr-x' permission string indicate for a directory entry?,"The permission string 'drwxrwxr-x' indicates that the entry is a directory ('d'). For the owner, 'rwx' grants read, write, and execute permissions. For the group, 'rwx' also grants read, write, and execute permissions. For others, 'r-x' grants read and execute permissions, but no write permission. This means the owner and group have full control over the directory's contents and can traverse it, while others can list its contents and traverse it but cannot create, delete, or rename files within it."
Explain the significance of the 'Modified date/time' in a Unix file entry.,"The 'Modified date/time' in a Unix file entry indicates the last time the file's content was changed. This timestamp is significant for several reasons: it helps users track when a file was last updated, aids in backup and synchronization processes, and is crucial for security monitoring as unexpected or recent modifications to critical files can be an indicator of malicious activity or system compromise."
Why is it important to process all user input with extreme care for SUID programs?,"It is important to process all user input with extreme care for SUID programs because the user running the program inherits the program owner's privileges, which can often be root. If user input, including command-line arguments and environment variables, is not properly validated and sanitized, an attacker could inject malicious data or commands. This could trick the SUID program into executing unintended operations with elevated privileges, potentially leading to a system compromise where the attacker effectively acts as root."
"What is the purpose of 'Accountability' in the context of logging, monitoring, and auditing?","The purpose of 'Accountability' in the context of logging, monitoring, and auditing is to track user actions and commands. By recording who performed what actions and when, systems can establish a clear audit trail. This trail is essential for attributing specific activities to individual users, which is critical for security investigations, compliance requirements, and ensuring that users are responsible for their actions on the system."
How does 'Performance monitoring' benefit from logging and auditing?,"'Performance monitoring' benefits from logging and auditing by providing historical data that assists in debugging applications and diagnosing system performance issues. Logs can capture resource usage, error messages, and execution times, which, when analyzed, help identify bottlenecks, inefficient code, or system misconfigurations. This data allows developers and administrators to understand system behavior over time and pinpoint the root causes of performance degradation."
What are the compliance and retention policies relevant to user privacy in logging?,"When logging and monitoring activities, compliance and retention policies are relevant to user privacy. These policies dictate how long log data can be stored (retention) and how it must be handled to protect user privacy. They ensure that sensitive user information captured in logs is not retained indefinitely, is accessed only by authorized personnel, and is used strictly for legitimate purposes, thereby mitigating the risk of compromising user privacy."
Describe the role of 'System call traces' in monitoring data.,"'System call traces' play a crucial role in monitoring data by describing the activities or behaviors of processes running in the system. System calls are the interface between an application and the operating system kernel. By tracing these calls, monitors can gain deep insight into what a program is doing, such as accessing files, creating processes, or making network connections, which is vital for detecting anomalous or malicious process behavior."
What is the primary focus of the document regarding Intrusion Detection Systems (IDS)?,"The primary focus of the document regarding Intrusion Detection Systems (IDS) is on host-based IDS. This type of IDS specifically monitors the characteristics of a single host for suspicious activities, rather than monitoring network traffic across multiple systems. This allows for detailed analysis of local system events, user actions, and file changes on an individual machine."
"Explain the octal representation of permissions 110 100 100, and what it means for a file.","The octal representation of permissions 110 100 100, which translates to 644, means the following for a file: \n*   **Owner (110 = 6):** Has read (4) and write (2) permissions. \n*   **Group (100 = 4):** Has read (4) permission. \n*   **Other (100 = 4):** Has read (4) permission. \nThis configuration allows the owner to read and modify the file, while members of the group and all other users can only read it."
"Explain the octal representation of permissions 111 000 000, and what it means for a file.","The octal representation of permissions 111 000 000, which translates to 700, means the following for a file: \n*   **Owner (111 = 7):** Has read (4), write (2), and execute (1) permissions. \n*   **Group (000 = 0):** Has no permissions (read, write, or execute). \n*   **Other (000 = 0):** Has no permissions (read, write, or execute). \nThis configuration grants exclusive full control (read, write, execute) over the file to its owner, with no access granted to the group or any other users."
What are the implications of a SUID program having its integrity compromised?,"The implications of a SUID program having its integrity compromised are severe, especially if the program is owned by root. If an attacker modifies a SUID program, they could inject malicious code that would then execute with the elevated privileges of the program's owner (root) whenever a user runs the compromised program. This allows the attacker to gain unauthorized root access, bypass security controls, and potentially take full control of the system, making integrity monitoring of SUID programs critical."
How does an access control matrix relate to Capability Lists?,"An access control matrix is a conceptual model that defines permissions for subjects (like users) over objects (like files). In practice, this matrix is often sparse. Capability Lists (C-Lists) are one way to implement this matrix, specifically by decomposing it by rows. Each C-List is associated with a particular user (a row in the matrix) and specifies all the authorized objects and operations that user can perform, effectively representing that user's capabilities derived from the access control matrix."
What is the primary characteristic that makes an access control matrix suitable for decomposition?,"The primary characteristic that makes an access control matrix suitable for decomposition is that it is usually sparse. A sparse matrix means that most subjects (users) do not have access to most objects (resources), resulting in many empty or null entries. This sparsity allows for efficient storage and implementation by breaking the matrix down into smaller, more manageable structures like Capability Lists (decomposition by rows) or Access Control Lists (decomposition by columns)."
"In Unix, what does it mean for files, directories, memory devices, and I/O devices to be 'uniformly treated as resources'?","In Unix, for files, directories, memory devices, and I/O devices to be 'uniformly treated as resources' means that they are all managed and accessed through a consistent interface and set of mechanisms. This implies that they are all considered objects of access control, and operations on them (like reading, writing, or executing) are governed by the same permission and ownership rules, simplifying the system's design and security model."
What is the significance of a resource having a single user owner and group owner in Unix?,"The significance of a resource having a single user owner and group owner in Unix is fundamental to its access control model. The user owner has primary control over the resource's permissions and can modify them. The group owner allows a specific set of users to share access rights, providing a layer of collaborative access. This dual ownership model forms the basis for determining who can read, write, or execute a resource, ensuring a clear chain of responsibility and control over system assets."
"How does the `chmod u+wrx,g+rx,g-w,o+r,o-wx filename` command modify permissions for the group?","The `chmod u+wrx,g+rx,g-w,o+r,o-wx filename` command modifies permissions for the group in two ways: `g+rx` adds read and execute permissions for the group, and `g-w` removes write permission from the group. This results in the group having read and execute access but explicitly revokes any write access they might have had previously or would have gained from the `g+rx` part if `w` was implied."
What is the primary risk if SUID programs are not monitored for integrity?,"The primary risk if SUID programs are not monitored for integrity is that an attacker could modify the program's code. Since SUID programs execute with the permissions of their owner (often root), a compromised SUID program could be used to execute arbitrary malicious code with elevated privileges. This allows an attacker to gain unauthorized root access, bypass security measures, and potentially take full control of the system without being detected, as the program would appear to be legitimate."
"Why is 'Intrusion detection' a key purpose of logging, monitoring, and auditing?","'Intrusion detection' is a key purpose of logging, monitoring, and auditing because these processes provide the necessary data to identify unauthorized access or system changes. By continuously collecting and analyzing system events, user activities, and resource usage, logs and monitoring tools can highlight suspicious patterns or deviations from normal behavior, which are indicative of an ongoing or attempted intrusion, allowing for timely response and mitigation."
How do logs contribute to 'Forensics and investigation' after an incident?,"Logs contribute to 'Forensics and investigation' after an incident by providing historical data that is crucial for understanding what happened. They serve as a detailed record of system events, user actions, and network activities leading up to, during, and after a security incident. This historical data allows investigators to reconstruct the timeline of events, identify the attack vector, determine the scope of compromise, and gather evidence for remediation and legal purposes."
