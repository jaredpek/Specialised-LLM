input,output
What are the three main bases of authentication?,"The three main bases of authentication are: what you know, what you possess, and what you are."
Compare weak/simple authentication with strong authentication.,"Weak/simple authentication is typically password-based and unilateral, meaning one entity (the claimant) proves its identity to the verifier. This often involves proving knowledge of a secret by giving it up. Strong authentication, on the other hand, involves mutual authentication where both parties take on the roles of claimant and verifier. It also utilizes challenge-response protocols, which are sequences of steps to prove knowledge of shared secrets without revealing the secret itself, often employing zero-knowledge proofs."
Explain password storage methods and their security implications.,"Password storage can be done in plaintext, which is considered BAD. Passwords can also be ""encrypted"" (fair) or ""hashed"" (good). Plaintext storage means passwords are stored as is, and the claimant's password is checked against this database. This offers no protection against insiders or attackers who gain system access, making disputes possible. Hashed or encrypted passwords involve storing either the encrypted or hashed versions of the passwords. The claimant's password is then hashed or encrypted and checked against this stored database, offering some degree of protection against insiders and attackers."
What is a salt in the context of password security?,"A salt is random data that is used as an additional input to a one-way function that ""hashes"" a password. Salts are used to safeguard passwords in storage. Their primary function is to defend against dictionary attacks."
Describe password policies.,"Password policies define the rules that need to be imposed on users for password selection, such as the complexity requirements for passwords and the number of failed attempts allowed before an account is locked."
What are alternative forms of passwords?,"Alternative forms of passwords include passphrases, one-time passwords, and visual passwords."
What is a one-way function?,"A one-way function, denoted as 'f', is a function that is relatively easy to compute but hard to reverse. This means that given an input 'x', it is easy to compute the output 'f(x)'. However, given an output 'y', it is hard to find an input 'x' such that 'y = f(x)'."
How are hash functions related to one-way functions?,Hash functions are a type of one-way function. A hash function 'f' takes an input 'x' of arbitrary length and produces an output 'f(x)' of a fixed length.
What does it mean for a hash function to be pre-image resistant?,"A hash function 'H' is considered pre-image resistant if, given a hash value 'y', it is computationally infeasible to find an input 'x' such that 'H(x) = y'."
What does it mean for a hash function to be collision resistant?,"A hash function 'H' is considered collision resistant if it is computationally infeasible to find a pair of distinct inputs (x, y), where x â‰  y, such that their hash values are the same, i.e., H(x) = H(y)."
What are some important hash functions mentioned for cryptography and password hashing?,"Important hash functions include SHA256 and SHA512, which are used for cryptography. For password hashing, important functions are KECCAK, ARGON2, and bcrypt."
Compare plaintext password storage with hashed/encrypted password storage.,"In plaintext password storage, passwords are stored as they are, and the claimant's password is checked against this database. This offers no protection against insiders or attackers, and disputes are possible. In contrast, hashed/encrypted password storage involves storing either the encrypted or hashed versions of passwords. The claimant's password is then hashed/encrypted and compared against this stored database, providing some protection against insiders and attackers."
Where are password hashes stored in Windows and Unix/Linux systems?,"In Windows systems, passwords (or their hashes) are stored in the Security Accounts Manager (SAM) file, located at %windir%\system32\config\SAM. In Unix systems, historically, they were in /etc/passwd, but in modern Unix/Linux systems, they are stored in the shadow file, located at /etc/shadow."
What are potential risks with temporary password storage at the application level?,"At the application level, passwords may be held temporarily in intermediate storage locations such as buffers, caches, or web pages. The management of these storage locations is typically beyond the user's control, which means a password might be kept for longer than the user intended or expected."
Describe the process of hashed password verification.,"In hashed password verification, the verifier (system) does not store the actual passwords, only their hashes. When a claimant 'A' provides their password, the system applies a hash function 'h' to it, resulting in 'h(password)'. This computed hash is then compared to the stored hash for claimant 'A' in the password table. If the computed hash matches the stored hash, the claimant is accepted; otherwise, they are rejected."
What is the role of the verifier in hashed password verification?,"The verifier, which is typically the system, stores a password table containing user identifiers and their corresponding password hashes. During verification, the verifier receives the claimant's password, hashes it, and compares the resulting hash with the stored hash for that user. The verifier does not store the actual passwords."
What is the difference between a claimant and a verifier in authentication?,"In authentication, the claimant is the entity attempting to prove its identity. The verifier is the entity that checks the claimant's proof of identity. In unilateral authentication, one party acts as the claimant and the other as the verifier. In mutual authentication, both parties take on both roles."
Explain the concept of mutual authentication.,Mutual authentication is a process where both parties involved in an interaction authenticate each other. This means that both the claimant and the verifier take on each other's roles to prove their identities to one another.
What are challenge-response protocols in authentication?,"Challenge-response protocols are a sequence of steps used in authentication to prove knowledge of shared secrets. In this method, the verifier issues a challenge to the claimant, and the claimant responds in a way that demonstrates they know the secret without actually revealing it. This is often achieved through techniques like zero-knowledge proofs."
What is the significance of proving knowledge of a secret without giving it up?,"Proving knowledge of a secret without giving it up is a crucial aspect of strong authentication, particularly in challenge-response protocols and zero-knowledge proofs. It enhances security by preventing the secret itself from being exposed, even if the communication channel is compromised."
What is a visual password?,"A visual password is an alternative form of password that relies on graphical elements or patterns for authentication, rather than traditional text-based input."
What is a passphrase?,"A passphrase is a sequence of words or characters used as a password, often longer and more memorable than a typical password, serving as an alternative form of password."
What is a one-time password?,A one-time password (OTP) is a password that is valid for only one login session or transaction. It is an alternative form of password designed to enhance security by limiting the usability of a compromised password.
What is the primary function of salts in password security?,"The primary function of salts in password security is to defend against dictionary attacks. By adding a unique random value (salt) to each password before hashing, it makes pre-computed rainbow tables ineffective."
What are the characteristics of a hash function's input and output?,A hash function takes an input of arbitrary length and produces an output of a fixed length.
What does it mean for a hash function to be computationally infeasible?,"Computationally infeasible means that it is practically impossible or would require an unreasonable amount of computational resources (time, processing power) to perform a specific task, such as finding a pre-image or a collision for a hash function."
What is the difference between 'encrypted' and 'hashed' passwords in terms of security?,"While both 'encrypted' and 'hashed' passwords offer better security than plaintext, 'hashed' passwords are generally considered 'good' for storage. Encryption can often be reversed if the decryption key is known, whereas hashing is designed to be a one-way process, making it much harder to recover the original password from its hash. This one-way property is crucial for secure password storage."
Explain the concept of 'dispute is possible' in the context of plaintext password storage.,"When passwords are stored in plaintext, there is no protection against unauthorized access by system administrators or attackers. If a dispute arises regarding a user's identity or actions, the fact that the password itself is stored in a readable format means it could have been accessed or misused without detection, making it difficult to definitively resolve the dispute based on authentication records."
What is the purpose of the password table in hashed password verification?,The password table in hashed password verification serves as a database that stores user identifiers and their corresponding password hashes. It allows the verifier (system) to look up the stored hash for a given user and compare it with the hash generated from the password provided by the claimant.
"What is the security benefit of a verifier not storing passwords, but only their hashes?","By storing only password hashes, the verifier significantly enhances security. If the system's database is compromised, attackers will only obtain the hashes, which are computationally difficult to reverse into actual passwords. This prevents attackers from directly obtaining users' credentials, even if they gain access to the stored data."
What are the potential vulnerabilities of passwords stored in caches or buffers?,"Passwords stored temporarily in caches or buffers at the application level are vulnerable because their management is often beyond the user's control. This means they might persist longer than expected, increasing the window of opportunity for an attacker to access them if the system is compromised."
Compare unilateral authentication with mutual authentication.,"Unilateral authentication involves a single entity proving its identity to another. For example, a user proving their identity to a system. Mutual authentication, on the other hand, involves a two-way process where both entities involved in the communication authenticate each other. Both parties act as both claimant and verifier."
What is the role of a 'claimant' in an authentication process?,"A claimant is the entity that initiates the authentication process by attempting to prove its identity to another party, known as the verifier."
What is the role of a 'verifier' in an authentication process?,A verifier is the entity responsible for checking and confirming the identity of the claimant. It receives proof of identity from the claimant and determines whether to accept or reject the claim.
How do challenge-response protocols help in proving knowledge of secrets?,"Challenge-response protocols prove knowledge of secrets by requiring the claimant to perform a computation based on the secret and a challenge provided by the verifier. The result of this computation, the response, is sent back to the verifier. If the response is correct, it confirms the claimant's knowledge of the secret without the secret itself ever being transmitted."
What is a zero-knowledge proof in the context of authentication?,"A zero-knowledge proof is a method by which one party (the prover) can prove to another party (the verifier) that a given statement is true, without revealing any information beyond the validity of the statement itself. In authentication, this allows a user to prove they know a secret without revealing the secret."
"What are the implications of 'what you know, what you possess, what you are' for authentication?",These three categories represent the fundamental bases for authentication. 'What you know' typically refers to passwords or PINs. 'What you possess' refers to physical items like ID cards or security tokens. 'What you are' refers to biometric characteristics such as fingerprints or facial features. A robust authentication system often combines elements from these categories.
What is the purpose of password policies regarding failed attempts?,"Password policies regarding failed attempts are implemented to enhance security by limiting the number of incorrect password entries allowed. After a certain number of failed attempts, the system may lock the account temporarily or permanently, preventing brute-force attacks where an attacker tries numerous passwords."
Explain the concept of 'fair' security for encrypted passwords.,"When passwords are 'encrypted' and considered 'fair' for storage, it implies a level of security better than plaintext. However, it suggests that the encryption method might be reversible if the decryption key is available or if the encryption is not sufficiently robust. This is generally less secure than using cryptographic hashing for password storage."
What is the security advantage of using 'hashed' passwords over 'encrypted' passwords?,"Hashed passwords are generally considered more secure for storage than encrypted passwords because hashing is a one-way function. While encrypted data can be decrypted if the key is known, a properly implemented hash function is computationally infeasible to reverse, meaning the original password cannot be recovered from its hash. This makes hashed passwords more resistant to attacks even if the database is compromised."
What is the security risk associated with storing passwords in plaintext?,"Storing passwords in plaintext poses a significant security risk because the passwords are stored in a readable format. This means that anyone who gains access to the storage, whether an insider like a system administrator or an external attacker, can easily view and misuse the passwords. This lack of protection makes disputes regarding user actions difficult to resolve."
How does salting a password improve its security against dictionary attacks?,"Salting a password involves adding a unique, random string of data (the salt) to the password before hashing it. This means that even if two users have the same password, their stored hashes will be different because they will have different salts. This prevents attackers from using pre-computed tables (like rainbow tables) that map common passwords to their hashes, as each salted hash is unique."
What is the difference between the /etc/passwd file and the shadow file in Unix/Linux systems?,"Historically, the /etc/passwd file contained user account information, including encrypted passwords. However, in modern Unix/Linux systems, sensitive information like password hashes is stored in the /etc/shadow file. This separation enhances security by restricting access to the password hashes, as the /etc/passwd file is typically world-readable, while /etc/shadow is only accessible by the root user."
What is the 'Security Accounts Manager (SAM)' file in Windows systems?,"The Security Accounts Manager (SAM) file in Windows systems is where user account information, including password hashes, is stored. Its typical location is within the system directory at %windir%\system32\config\SAM."
What are the security implications of passwords being held in intermediate storage locations like buffers or caches?,"When passwords are held in intermediate storage locations such as buffers or caches, they are often managed by the system or application rather than the user. This lack of direct user control means passwords might persist for longer periods than intended, increasing the risk of exposure if the system is compromised. It's also advised not to save passwords in cache."
How does a hash function ensure that the output is of a fixed length regardless of the input size?,"A hash function is designed with a specific algorithm that processes an input of any length and consistently produces an output of a predetermined, fixed length. This is achieved through mathematical operations within the hashing algorithm that map variable-length inputs to a constant-length output space."
"What does it mean for a hash function to be 'computationally infeasible to find a pair (x,y) such that xâ‰ y and H(x) = H(y)'?","This statement describes the property of collision resistance in hash functions. It means that it is practically impossible or would require an immense amount of computational effort to find two different inputs, 'x' and 'y', that produce the same hash output 'H(x) = H(y)'. This property is crucial for the security of hash functions."
What is the primary purpose of using cryptographic constructs like one-way functions in password storage security?,"The primary purpose of using cryptographic constructs like one-way functions in password storage security is to protect the actual passwords. By transforming passwords into a one-way hash, it becomes computationally difficult to reverse the process and retrieve the original password, even if the stored hashes are compromised. This ensures that the sensitive password data is not directly exposed."
Compare 'what you know' authentication with 'what you possess' authentication.,"'What you know' authentication relies on information that only the user is supposed to know, such as a password or a PIN. 'What you possess' authentication relies on something the user physically has, such as a security token, a smart card, or a mobile device that receives a code. Both are common methods for verifying identity."
