input,output
What are the fundamental bases of authentication?,"The fundamental bases of authentication are categorized into three main types: what you know, what you possess, and what you are."
Describe the concept of password-related techniques.,"Password-related techniques encompass various methods and considerations for using passwords in authentication. This includes how passwords are stored, the policies that govern their selection and usage, the practice of salting passwords, and alternative forms of passwords."
Explain the different methods of password storage.,"Passwords can be stored in several ways: in plaintext, which is considered bad; encrypted, which is fair; or hashed, which is good. Hashed passwords are the most secure method for storage."
What are password policies and what do they entail?,"Password policies are rules that need to be imposed on users regarding their password selection and usage. These policies can include requirements for password complexity, minimum length, and the number of failed attempts allowed before an account is locked."
Define the term 'salting' in the context of passwords.,"Salting of passwords involves adding random data, known as salt, to a password before it is hashed. This salt is unique for each password and is used as an additional input to a one-way function that hashes the password. Salts are used to safeguard passwords in storage and primarily defend against dictionary attacks."
What are alternative forms of passwords?,"Alternative forms of passwords include passphrases, which are longer sequences of words; one-time passwords (OTPs), which are valid for a single login session; and visual passwords, which involve selecting images or patterns."
Explain the concept of a one-way function.,"A one-way function, denoted as f, is a mathematical function that is relatively easy to compute in one direction but computationally hard to reverse. This means that given an input x, it is easy to calculate the output f(x), but given an output y, it is difficult to find an input x such that y = f(x)."
How are hash functions related to one-way functions?,"Hash functions are a specific type of one-way function. A hash function, denoted as H, takes an input x of arbitrary length and produces an output H(x) of a fixed length. This process is easy to compute but difficult to reverse."
What are the key properties of hash functions?,"Hash functions have two key properties: pre-image resistance and collision resistance. A hash function H is pre-image resistant if, given a hash value y, it is computationally infeasible to find an input x such that H(x) = y. It is collision resistant if it is computationally infeasible to find two different inputs x and y (where x â‰  y) such that H(x) = H(y)."
What is the significance of pre-image resistance in hash functions?,"Pre-image resistance means that given a hash value, it is computationally infeasible to find the original input that produced that hash. This property is crucial for security as it prevents attackers from determining the original data from its hash."
Explain the concept of collision resistance in hash functions.,Collision resistance means that it is computationally infeasible to find two distinct inputs that produce the same hash output. This property is important to ensure that different data cannot be substituted for one another by having the same hash.
What are some important hash functions used for cryptography and password hashing?,"Important hash functions include SHA256 and SHA512, which are used for cryptographic purposes. For password hashing, ARGON2 and bcrypt are commonly used."
Describe the difference between plaintext and hashed/encrypted password storage.,"In plaintext password storage, the actual passwords are stored directly in the database. When a user attempts to log in, their entered password is compared directly to the stored plaintext password. In contrast, with hashed/encrypted passwords, only the transformed (hashed or encrypted) versions of the passwords are stored. The user's entered password is also transformed, and then compared to the stored transformed version. This provides a degree of protection against unauthorized access to the stored passwords."
What are the security implications of storing passwords in plaintext?,"Storing passwords in plaintext offers no protection against insider threats, such as a system administrator, or against an attacker who gains access to the system. This lack of security means that if the password database is compromised, all user passwords are immediately exposed, potentially leading to disputes and unauthorized access to other systems where the same passwords might be reused."
What advantages do hashed/encrypted passwords offer over plaintext storage?,"Hashed or encrypted passwords offer some degree of protection against insider threats and attackers who gain access to the system. While the transformed passwords are still stored, they do not directly reveal the original passwords, making it harder for unauthorized individuals to compromise user accounts."
Where are password hashes typically stored in operating systems?,"In operating systems, password hashes are stored in specific password files. In Windows systems, they are stored in the Security Accounts Manager (SAM) file, located at %windir%\system32\config\SAM. In Unix and Linux systems, historically they were in /etc/passwd, but modern systems store them in the shadow file, typically located at /etc/shadow."
What are the risks associated with temporary password storage at the application level?,"At the application level, passwords may be temporarily held in intermediate storage locations such as buffers, caches, or even on a web page. The management of these storage locations is often beyond the user's control. This can lead to a password being retained for longer than the user intended or expected, increasing the risk of exposure if these locations are compromised."
Explain the process of hashed password verification.,"In hashed password verification, the verifier (system) does not store the actual passwords but only their hashes. When a claimant (user) provides their password, the system applies the same hashing function to it. The resulting hash is then compared to the stored hash of the claimant's password. If the hashes match, the claimant is accepted; otherwise, they are rejected."
What is the role of the verifier in hashed password verification?,"The verifier, typically the system, is responsible for storing the hashed versions of user passwords and performing the comparison during the verification process. Crucially, the verifier should not store the actual passwords, only their hashes, to enhance security."
How does a claimant prove their identity using a hashed password?,"A claimant proves their identity by providing their password. The system then hashes this provided password using the same function that was used to hash the stored password. If the newly generated hash matches the stored hash associated with the claimant's identity, the claimant is authenticated."
What is the outcome if the computed hash does not match the stored hash during verification?,"If the computed hash of the provided password does not match the stored hash, the claimant is rejected, meaning their authentication attempt fails."
"What does it mean for a verifier to 'not store the passwords, only their hashes'?","This means that the system's database contains the results of applying a hash function to user passwords, rather than the passwords themselves. This is a security measure because even if the database is accessed, the original passwords cannot be directly retrieved from the stored hashes."
"What are the three categories of authentication based on what is known, possessed, or inherent?","The three categories of authentication are based on: 1. What you know (e.g., a password or PIN), 2. What you possess (e.g., a security token or smart card), and 3. What you are (e.g., biometric traits like fingerprints or facial features)."
Explain the concept of unilateral authentication.,"Unilateral authentication is a type of weak or simple authentication where only one entity, the claimant, proves its identity to the verifier. The verifier does not necessarily prove its identity back to the claimant in the same transaction."
What is the core principle of challenge-response protocols?,"Challenge-response protocols are a method used in strong authentication. They involve a sequence of steps where the verifier issues a challenge to the claimant, and the claimant must respond by demonstrating knowledge of a shared secret. This proves the claimant's identity without revealing the secret itself."
How do challenge-response protocols help in proving knowledge of a secret?,"Challenge-response protocols allow a claimant to prove they know a secret without actually revealing the secret. The verifier sends a challenge, and the claimant uses the secret to compute a response. The verifier can then check if the response is correct, thus confirming the claimant's knowledge of the secret."
What is the advantage of proving knowledge of a secret without giving it up?,"Proving knowledge of a secret without giving it up, as in zero knowledge proofs, significantly enhances security. It prevents the secret from being intercepted or compromised during the authentication process, as it is never transmitted in its original form."
What is mutual authentication?,"Mutual authentication is a process in strong authentication where both parties involved in the communication take on the roles of both claimant and verifier. This means that each party proves its identity to the other, ensuring that both entities are who they claim to be."
Contrast weak/simple authentication with strong authentication.,"Weak/simple authentication is often password-based and unilateral, where only one party proves its identity. Strong authentication, on the other hand, involves mutual authentication, where both parties verify each other's identity, and often utilizes challenge-response protocols or zero knowledge proofs to securely prove knowledge of secrets."
What is the primary function of salts in password security?,"The primary function of salts in password security is to defend against dictionary attacks. By adding a unique random salt to each password before hashing, even if two users have the same password, their stored hashes will be different, making pre-computed attack tables ineffective."
How does salting improve password storage security?,"Salting improves password storage security by ensuring that identical passwords result in different hashes. This prevents attackers from using pre-computed hash tables (rainbow tables) to quickly find passwords, as each salted hash is unique."
What is the input and output of a hash function?,"A hash function takes an input of arbitrary length (any data, text, or file) and produces an output of a fixed length, known as a hash value or digest."
What does it mean for a hash function to be 'easy to compute'?,"When a hash function is 'easy to compute,' it means that the process of applying the function to an input to generate an output can be performed quickly and efficiently with available computational resources."
What does it mean for a one-way function to be 'hard to reverse'?,"A one-way function being 'hard to reverse' means that given the output of the function, it is computationally very difficult and time-consuming to determine the original input that produced that output. This is a fundamental security property."
Provide an example of a scenario where plaintext password storage is problematic.,"A problematic scenario for plaintext password storage occurs when an attacker gains access to the system. Because the passwords are stored in their original form, the attacker can immediately read and use them to impersonate users or access other systems where those passwords might be reused. This also leaves users vulnerable to insider threats from system administrators."
What is the purpose of the 'Enter Passcode' screen shown in the document?,The 'Enter Passcode' screen is an example of a user interface for inputting a password or passcode. It typically includes fields for entering the secret and buttons for actions like clearing the input or submitting it for verification.
What are the implications of 'dispute is possible' in the context of plaintext password storage?,"The phrase 'dispute is possible' in the context of plaintext password storage implies that if a user claims they did not perform an action, it can be difficult to definitively prove otherwise. Since the password is known in its original form, it's harder to trace unauthorized actions back to a specific compromise of the stored password itself, as opposed to a situation where only hashes are stored."
What is the difference between a password and a password hash?,A password is the secret string of characters that a user chooses to authenticate themselves. A password hash is the result of applying a one-way cryptographic function to the password. The hash is a fixed-size string that is computationally infeasible to reverse back into the original password.
How does the diagram for Hashed Password Verification illustrate the process?,"The diagram shows Claimant A providing a password to the Verifier (system) B. The verifier then hashes this password using a function 'h'. Simultaneously, the verifier looks up the stored hash for Claimant A in its password table. If the computed hash 'h(password)' matches the stored hash 'h(password_A)', the system accepts the claimant; otherwise, it rejects them. The key point is that the verifier only stores and compares hashes, not the original passwords."
What does the 'Password table' represent in the Hashed Password Verification diagram?,"The 'Password table' in the Hashed Password Verification diagram represents the database maintained by the verifier (system). This table stores the hashed versions of user passwords, typically indexed by the user's identifier (e.g., 'A' for Claimant A). It contains entries like 'A' associated with 'h(password_A)', which is the hash of Claimant A's password."
What is the significance of the arrow pointing from 'h(password)' to the equality check in the verification diagram?,The arrow pointing from 'h(password)' to the equality check signifies that the hash computed from the claimant's provided password is being compared against another value. This comparison is the core of the verification process: determining if the computed hash matches the expected hash.
What does the 'ACCEPT' and 'REJECT' output signify in the verification diagram?,The 'ACCEPT' output signifies that the authentication attempt has been successful because the computed hash matched the stored hash. The 'REJECT' output signifies that the authentication attempt has failed because the hashes did not match.
What is the role of the 'h' function in the Hashed Password Verification diagram?,"The 'h' function in the Hashed Password Verification diagram represents the hash function. It takes the claimant's provided password as input and outputs its corresponding hash value, which is then used for comparison."
What are the potential risks if a system administrator has access to a plaintext password database?,"If a system administrator has access to a plaintext password database, they can view and potentially misuse any user's password. This includes impersonating users, accessing sensitive information, or even locking users out of their accounts. This highlights the lack of protection against insider threats with plaintext storage."
Explain the concept of 'what you are' in authentication.,"'What you are' refers to authentication methods that rely on unique biological characteristics of an individual. These are known as biometrics and include features like fingerprints, facial recognition, iris scans, and voice patterns."
What are the two main categories of authentication techniques discussed?,The two main categories of authentication techniques discussed are Weak/Simple Authentication and Strong Authentication.
What is the difference between 'encrypted' and 'hashed' passwords in terms of security?,"While both encrypted and hashed passwords offer better security than plaintext, hashing is generally considered superior for password storage. Encryption can often be reversed if the decryption key is known, whereas a properly implemented hash function is designed to be one-way and computationally infeasible to reverse. Therefore, 'hashed' is described as 'good' for password storage, while 'encrypted' is 'fair'."
What is the purpose of the 'Source: Menezes et al. Handbook of Applied Cryptography' note?,The note 'Source: Menezes et al. Handbook of Applied Cryptography' indicates that the information and diagram presented regarding Hashed Password Verification are derived from a reputable academic source in the field of cryptography. This serves to attribute the information and lend credibility to its accuracy.
