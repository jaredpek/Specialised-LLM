input,output
What are the three main bases of authentication?,"The three main bases of authentication are: what you know, what you possess, and what you are."
Compare weak/simple authentication with strong authentication.,"Weak/Simple Authentication is typically password-based and unilateral, where one entity (the claimant) proves its identity to the verifier. This method involves proving knowledge of a secret by giving it up. Strong Authentication, on the other hand, involves mutual authentication, where both parties act as both claimant and verifier. It often utilizes challenge-response protocols, which are sequences of steps to prove knowledge of shared secrets without revealing the secret itself, employing techniques like zero-knowledge proofs."
Explain password storage methods.,"Password storage can be done in several ways: Plaintext, which is considered BAD, involves storing passwords as they are. Encrypted, which is fair, involves transforming passwords into an unreadable format. Hashed, which is good, involves using a one-way function to transform passwords into a fixed-length string. Hashed passwords are generally preferred for security."
What are password policies?,"Password policies are rules that need to be imposed on users regarding password selection and usage. These policies can include requirements for password complexity, length, and the number of failed attempts allowed before an account is locked."
What is salting of passwords?,"Salting of passwords involves adding random data, known as salt, to a password before it is hashed. Salt is random data that is used as an additional input to a one-way function that hashes a password. Salts are used to safeguard passwords in storage and their primary function is to defend against dictionary attacks."
What are alternative forms of passwords?,"Alternative forms of passwords include passphrases, which are longer sequences of words, one-time passwords (OTPs) that are valid for a single session or transaction, and visual passwords, which involve selecting images or patterns."
Define salt in the context of password security.,Salt is random data that is used as an additional input to a one-way function that hashes a password. It is used to safeguard passwords in storage and primarily defends against dictionary attacks.
What is a one-way function?,"A one-way function, denoted as f, is a mathematical function that is relatively easy to compute but hard to reverse. This means that given an input x, it is easy to compute the output f(x), but given an output y, it is computationally infeasible to find an input x such that y = f(x)."
How do hash functions relate to one-way functions?,"Hash functions are a specific type of one-way function. A hash function, denoted as H, takes an input x of arbitrary length and produces an output H(x) of a fixed length. This process is easy to compute but difficult to reverse."
What does it mean for a hash function to be pre-image resistant?,"A hash function H is considered pre-image resistant if, given a hash value y, it is computationally infeasible to find an input x such that H(x) = y. This means you cannot easily determine the original input from its hash."
What does it mean for a hash function to be collision resistant?,"A hash function H is considered collision resistant if it is computationally infeasible to find two different inputs, x and y (where x â‰  y), such that their hash values are the same, i.e., H(x) = H(y). This property ensures that different inputs produce unique hashes."
What are some important hash functions mentioned?,"Important hash functions include SHA256, SHA512, KECCAK (for cryptographic purposes), ARGON2, and bcrypt (specifically for password hashing)."
Compare plaintext password storage with hashed/encrypted password storage.,"In plaintext password storage, passwords are stored as they are, and the claimant's password is checked directly against the database. This offers no protection against insiders or attackers who gain system access, making disputes possible. In contrast, hashed/encrypted password storage involves storing either encrypted or hashed versions of passwords. The claimant's password is then hashed/encrypted and checked against the stored hashed/encrypted versions. This method provides some degree of protection against insiders and attackers."
Where are password hashes stored in Windows and Unix systems?,"In Windows systems, password hashes are stored in the Security Accounts Manager (SAM) file, typically located at %windir%\system32\config\SAM. In Unix-like systems, historically, they were in /etc/passwd, but in modern Unix/Linux systems, they are stored in the shadow file, located at /etc/shadow."
What are potential risks with temporary password storage at the application level?,"At the application level, passwords may be temporarily held in intermediate storage locations such as buffers, caches, or web pages. The management of these locations is often beyond the user's control, which can result in a password being retained for longer than the user intended or expected."
Describe the process of hashed password verification.,"In hashed password verification, the verifier (system) does not store the actual passwords, only their hashes. When a claimant A provides their password, the system applies a hash function (h) to it, resulting in h(password). This computed hash is then compared to the stored hash for claimant A in the password table. If the computed hash matches the stored hash, the claimant is accepted; otherwise, they are rejected."
What is the role of the verifier in hashed password verification?,"The verifier's role in hashed password verification is to receive the claimant's submitted password, hash it using the same function used for storage, and then compare this computed hash with the stored hash associated with the claimant's identity. The verifier should not store the actual passwords, only their hashes."
What is the difference between a claimant and a verifier in authentication?,"In authentication, the claimant is the entity attempting to prove its identity. The verifier is the entity that checks the claimant's proof of identity. In unilateral authentication, one party acts as claimant and the other as verifier. In mutual authentication, both parties take on both roles."
Explain the concept of mutual authentication.,"Mutual authentication is a process where both parties involved in a communication or transaction authenticate each other. This means that both the claimant and the verifier take on both roles, ensuring that each party verifies the identity of the other before proceeding."
What are challenge-response protocols?,"Challenge-response protocols are a method used in authentication, particularly in strong authentication systems. They involve a sequence of steps where the verifier sends a 'challenge' to the claimant, and the claimant responds with information derived from the challenge and a shared secret, proving their knowledge of the secret without revealing it directly."
What are zero-knowledge proofs in the context of authentication?,"Zero-knowledge proofs are a technique used in strong authentication, often within challenge-response protocols. They allow one party to prove to another that they know a certain piece of information (like a secret) without revealing any information about the secret itself, other than the fact that they know it."
What is the primary function of salts in password security?,"The primary function of salts in password security is to defend against dictionary attacks. By adding a unique random salt to each password before hashing, even identical passwords will have different hashes, making precomputed tables of common password hashes ineffective."
What is the difference between 'encrypted' and 'hashed' passwords?,"While both 'encrypted' and 'hashed' passwords transform the original password, they differ in their reversibility and purpose. 'Encrypted' passwords can typically be decrypted back to their original form using a key, making them fair but potentially vulnerable if the key is compromised. 'Hashed' passwords use a one-way function, making them very difficult or impossible to reverse, which is generally considered good for security as the original password cannot be recovered from the hash."
What are the implications of storing passwords in plaintext?,"Storing passwords in plaintext means they are stored exactly as entered. This offers no protection against unauthorized access, whether from external attackers or internal system administrators. If the system is compromised, all plaintext passwords are immediately exposed, leading to potential misuse and disputes."
Explain the concept of 'what you know' as a basis for authentication.,'What you know' as a basis for authentication refers to information that only the legitimate user is supposed to know. The most common example is a password or a PIN (Personal Identification Number).
Explain the concept of 'what you possess' as a basis for authentication.,"'What you possess' as a basis for authentication relies on something that only the legitimate user has in their physical possession. Examples include a security token, a smart card, or a mobile phone that receives one-time codes."
Explain the concept of 'what you are' as a basis for authentication.,"'What you are' as a basis for authentication utilizes unique biological characteristics of an individual, known as biometrics. Examples include fingerprints, facial features, iris patterns, or voice recognition."
What is the security implication of a system administrator having access to plaintext passwords?,"If a system administrator has access to plaintext passwords, it means they can view the actual passwords of users. This poses a significant security risk, as it bypasses the intended security measures and could lead to misuse of credentials, unauthorized access, or identity theft."
How does hashing improve password security compared to plaintext storage?,"Hashing improves password security by transforming the plaintext password into a fixed-length string that is difficult to reverse. This means that even if the stored hashes are compromised, the original passwords cannot be easily recovered, unlike plaintext storage where compromised data directly reveals the passwords."
What is the purpose of the 'password table' in hashed password verification?,"The 'password table' in hashed password verification serves as a database that stores the hashed versions of users' passwords, linked to their respective identities. When a user attempts to log in, their provided password is hashed, and this computed hash is compared against the corresponding entry in the password table."
What does it mean for a hash function to be computationally infeasible to reverse?,For a hash function to be computationally infeasible to reverse means that it is practically impossible or would require an unreasonable amount of computational resources and time to determine the original input value given only the output hash. This is a fundamental property of secure hash functions.
What is the difference between 'fair' and 'good' password storage methods?,"In terms of password storage, 'fair' typically refers to encryption, where the original password can be recovered with a key. 'Good' refers to hashing, a one-way process that makes recovering the original password extremely difficult. Hashing is generally preferred for better security."
Can you explain the 'challenge-response' mechanism in authentication?,"A challenge-response mechanism is an authentication protocol where the verifier sends a random challenge to the claimant. The claimant then uses a secret they share with the verifier to compute a response based on this challenge. The verifier checks if the response is correct, thereby authenticating the claimant without the secret ever being transmitted over the network."
What are the potential vulnerabilities of password policies?,"While password policies aim to enhance security, they can have vulnerabilities. For instance, overly complex policies might lead users to choose predictable patterns or write down passwords, defeating the purpose. The number of failed attempts allowed can also be exploited if not set appropriately."
How does salting protect against dictionary attacks?,"Salting protects against dictionary attacks by ensuring that each password hash is unique, even if the same password is used by multiple users. A dictionary attack involves trying common passwords from a list. Without salt, an attacker could pre-compute hashes for all words in a dictionary and quickly find matches. With salt, the attacker would need to compute hashes for each password with every possible salt, making the attack computationally infeasible."
What is the significance of 'arbitrary length' input for a hash function?,"The significance of a hash function accepting an input of 'arbitrary length' means that it can process data of any size, from a single character to very large files. This flexibility is crucial as passwords, passphrases, or other data inputs can vary greatly in length."
What is the significance of 'fixed length' output for a hash function?,"The significance of a hash function producing an output of 'fixed length' means that regardless of the input size, the resulting hash will always be the same length (e.g., 256 bits for SHA-256). This standardization is important for consistent storage and comparison of hash values."
What are the risks associated with storing passwords in caches?,"Storing passwords in caches, even temporarily, poses a risk because caches are often accessible to unauthorized users or can be compromised. If a password resides in a cache, it could be exposed, similar to storing it in plaintext, especially if the cache is not properly secured."
How does the verifier ensure a claimant's identity using hashes?,"The verifier ensures a claimant's identity by comparing the hash of the password provided by the claimant with the pre-stored hash associated with that claimant's account. If the hashes match, it indicates that the claimant knows the correct password, and thus their identity is verified."
What is the difference between 'what you know' and 'what you possess' authentication?,"'What you know' authentication relies on secret information, like a password. 'What you possess' authentication relies on a physical item that the user must have, such as a security token or a mobile device."
What is the difference between 'what you possess' and 'what you are' authentication?,"'What you possess' authentication requires the user to have a physical item, like a key card. 'What you are' authentication uses unique biological traits, such as fingerprints or facial recognition, which are inherent to the individual."
Explain the concept of 'dispute' in the context of plaintext password storage.,"In the context of plaintext password storage, a 'dispute' can arise if a user claims they did not perform a certain action, but their credentials were used. Since the password is stored in plaintext and accessible to administrators, it's difficult to definitively prove who accessed the system, leading to potential disputes over accountability."
What is the role of cryptographic constructs in password storage security?,"Cryptographic constructs, such as one-way functions (and specifically hash functions), are fundamental to secure password storage. They allow passwords to be transformed into a secure, non-reversible format, protecting them from direct exposure even if the storage system is compromised."
What are the security benefits of using hashed passwords over encrypted passwords?,"Hashed passwords offer a higher level of security because they are one-way functions, meaning they cannot be easily reversed to retrieve the original password. Encrypted passwords, while obscuring the data, can be decrypted if the encryption key is compromised, making them less secure for long-term password storage."
How can a verifier prove knowledge of a shared secret without revealing it?,"A verifier can prove knowledge of a shared secret without revealing it through techniques like zero-knowledge proofs, often implemented within challenge-response protocols. The verifier responds to a challenge in a way that demonstrates knowledge of the secret, but the response itself does not expose the secret."
What is the purpose of imposing rules on the selection of passwords by users?,"The purpose of imposing rules on the selection of passwords by users is to encourage the creation of stronger, more complex passwords that are harder for attackers to guess or crack. These rules often involve requirements for length, character types (uppercase, lowercase, numbers, symbols), and avoiding easily guessable information."
What is the difference between a unilateral and mutual authentication?,"Unilateral authentication involves one party (claimant) proving its identity to another party (verifier). Mutual authentication, on the other hand, is a two-way process where both parties authenticate each other, with each acting as both claimant and verifier."
What are the security implications of passwords being held longer than bargained for in storage locations?,"If passwords are kept longer than bargained for in storage locations, it increases the window of opportunity for them to be compromised. This is particularly risky if the storage location is not adequately secured or if the user has changed their password elsewhere but the old one persists in the temporary location."
