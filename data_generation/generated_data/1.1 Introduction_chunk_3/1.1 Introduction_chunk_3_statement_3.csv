input,output
Explain how system complexity relates to insecurity.,"System complexity leads to insecurity because as systems become more complex, the number of security requirements and potential vulnerabilities increases. For instance, a simple standalone computer with a single user and monoprogram only requires physical security, whereas a networked computer demands physical security, process protection, data protection, user authentication, and communication protection, each adding layers of complexity and potential points of failure."
List the security requirements for a standalone computer with a single user running a monoprogram.,"For a standalone computer with a single user running a monoprogram, the primary security requirement is physical security. Physical security refers to the protection of hardware and infrastructure from physical threats, unauthorized access, or damage."
What security measures are necessary for a standalone computer used by a single user running multiple programs?,"A standalone computer used by a single user running multiple programs requires both physical security and process protection. Physical security involves safeguarding the hardware and infrastructure from physical threats. Process protection refers to mechanisms that ensure that different programs or processes running concurrently do not interfere with each other's execution or data, preventing unauthorized access or modification."
Describe the security requirements for a standalone computer with multiple users.,"A standalone computer with multiple users necessitates physical security, process protection, data protection, and user authentication. Physical security protects the hardware. Process protection ensures that concurrent processes do not interfere. Data protection involves safeguarding data from unauthorized access, modification, or destruction. User authentication is the process of verifying the identity of a user, typically through credentials like passwords, to ensure only authorized individuals can access the system."
Detail the comprehensive security requirements for a networked computer.,"A networked computer has the most extensive security requirements, including physical security, process protection, data protection, user authentication, and communication protection. Physical security protects the hardware. Process protection isolates running programs. Data protection secures stored information. User authentication verifies user identities. Communication protection involves securing data transmitted over a network, ensuring its confidentiality, integrity, and availability against eavesdropping, tampering, or denial-of-service attacks."
Define 'Physical security' in the context of computer systems.,"Physical security, in the context of computer systems, refers to the protection of hardware, infrastructure, and physical assets from physical threats, unauthorized access, theft, damage, or environmental hazards. This includes measures like secure facilities, locks, surveillance, and environmental controls."
What is 'Process protection' and why is it important?,"Process protection refers to the mechanisms that ensure that different programs or processes running concurrently on a system do not interfere with each other's execution, memory space, or data. It is important to prevent one process from accessing or corrupting the resources of another, thereby maintaining system stability and security."
Explain 'Data protection' as a security requirement.,"Data protection, as a security requirement, involves safeguarding data from unauthorized access, modification, disclosure, or destruction. This includes measures such as encryption, access controls, and backup strategies to ensure the confidentiality, integrity, and availability of information."
What is the purpose of 'User authentication'?,"The purpose of user authentication is to verify the identity of a user attempting to access a computer system or network. This process typically involves validating credentials, such as usernames and passwords, biometric data, or security tokens, to ensure that only authorized individuals can gain access."
Describe 'Communication protection' in a networked computer environment.,"Communication protection in a networked computer environment refers to the security measures implemented to safeguard data transmitted over a network. This includes ensuring the confidentiality (preventing eavesdropping), integrity (preventing tampering), and availability (preventing denial of service) of information as it travels between systems, often through encryption and secure protocols."
How do 'System Users' contribute to insecurity?,"System Users contribute to insecurity primarily through two main ways: first, by not using security features correctly, which often manifests as misconfiguration; and second, by prioritizing convenience over security, leading them to disable security configurations that they perceive as inconvenient. Misconfiguration refers to incorrect or suboptimal settings of security controls, which can leave systems vulnerable."
What role do 'System Developers' play in creating system insecurity?,"System Developers can inadvertently create system insecurity if security features are not designed correctly or if security components are not implemented correctly. Furthermore, developers are humans, and like all humans, they can make mistakes during the design and implementation phases, leading to vulnerabilities."
Explain how 'External Parties' can lead to insecurity.,"External Parties can lead to insecurity by manipulating an individual's trust for profit. A common example of this is social engineering, which is a psychological manipulation of people into performing actions or divulging confidential information. This exploitation of human trust bypasses technical security measures."
Define 'misconfiguration' in the context of system insecurity.,"Misconfiguration refers to the incorrect or suboptimal setup of security features or system settings. This can leave systems vulnerable to attacks, as security controls may not operate as intended or may have unintended loopholes that attackers can exploit."
What is 'social engineering' and how does it contribute to insecurity?,"Social engineering is a manipulative technique that exploits human psychology to trick individuals into performing actions or divulging confidential information. It contributes to insecurity by bypassing technical security measures, as attackers manipulate trust to gain unauthorized access or information, often for profit."
What are the main components of a 'Threat Model' according to the basics of cyber security?,"According to the basics of cyber security, the main components of a Threat Model include the Trusted Computing Base (TCB), the attacker's assumptions, and the security properties the system aims to achieve."
List the three core areas covered under the 'Basics of Cyber Security'.,"The three core areas covered under the 'Basics of Cyber Security' are Threat Model, Security Strategies, and Design Principles of Computer Security."
Provide a comprehensive description of a 'Threat Model'.,"A Threat Model is a structured approach used to describe the adversaries and threats under consideration for a system. It encompasses several key aspects: identifying what components are trusted and what are not trusted (the Trusted Computing Base or TCB), understanding the resources, capabilities, and knowledge of untrusted entities, including the actions they can perform, and defining the specific security properties the system aims to achieve."
What are the key elements to consider when describing adversaries and threats in a Threat Model?,"When describing adversaries and threats in a Threat Model, the key elements to consider are: first, identifying what is trusted and what is not trusted, which refers to the Trusted Computing Base (TCB); second, for the untrusted entities, understanding their resources, capabilities, and knowledge, as well as the actions they can perform; and third, determining what security properties the system aims to achieve."
How does the Trusted Computing Base (TCB) fit into a Threat Model?,"In a Threat Model, the Trusted Computing Base (TCB) is a critical element that defines what parts of the computer system are considered trusted. By identifying the TCB, the threat model helps to delineate the boundaries of trust, allowing for a clearer understanding of which components are assumed to be secure and which are potential targets for attackers."
What information about untrusted entities is crucial for a Threat Model?,"For untrusted entities, a Threat Model must consider their resources, capabilities, and knowledge. This includes understanding what assets they possess, what actions they are capable of performing, and what information they might have about the system, all of which inform the potential threats they pose."
What is the role of 'Security Properties' in a Threat Model?,"Security Properties in a Threat Model define the specific goals the system aims to achieve in terms of security. These properties, such as confidentiality, integrity, and availability, guide the design and evaluation of security mechanisms by specifying what needs to be protected and against what types of attacks."
Define 'Trust' in the context of a cyber system.,"In the context of a cyber system, 'Trust' refers to the degree to which an entity is expected to behave in a predictable and secure manner. This expectation includes both what the entity is anticipated to do (e.g., an anti-malware detecting malicious programs) and what it is expected not to do (e.g., a website not exposing private data)."
Provide examples of what an entity is 'expected to do' to demonstrate trust.,"Examples of what an entity is 'expected to do' to demonstrate trust include an anti-malware program detecting malicious programs, or a system preventing illegal account logins. These actions align with the expected secure behavior of the entity."
Provide examples of what an entity is 'expected not to do' to demonstrate trust.,"Examples of what an entity is 'expected not to do' to demonstrate trust include a website not exposing private data to third parties, or an application not injecting viruses into your system. These are behaviors that, if violated, would indicate a breach of trust."
Why is it important to make clear what should be trusted in a cyber system?,"It is important to make clear what should be trusted in a cyber system because security cannot be established if no entities are trusted. If the boundaries of trust are not clearly defined, the designed security solutions may fail in practice, as assumptions about component behavior could be violated, leading to vulnerabilities."
What are the consequences if trust is not clearly defined in a cyber system?,"If trust is not clearly defined in a cyber system, the consequences are that security cannot be effectively established. The designed security solutions may fail in practice because the system's components might not behave as expected, leading to vulnerabilities and potential breaches."
Define 'Entity' as it relates to trust in a cyber system.,"An 'entity' in the context of trust in a cyber system refers to any component, program, user, or system that interacts within the cyber environment and whose behavior is subject to expectations regarding security. Trust is assigned to these entities based on what they are expected to do and not to do."
Define the 'Trusted Computing Base (TCB)'.,"The Trusted Computing Base (TCB) is defined as a set of components, which can include software, operating systems (OS), firmware, and hardware, that need to be trusted to ensure the overall security of a cyber system. These components are assumed to be secure and operate correctly."
What types of components are typically included in the Trusted Computing Base (TCB)?,"The Trusted Computing Base (TCB) typically includes a set of essential components such as software, the operating system (OS), firmware, and hardware. These are the foundational elements that must be trusted to maintain the security of the entire cyber system."
What is the implication of components being 'outside of the TCB'?,The implication of components being 'outside of the TCB' is that they can be malicious and misbehave. This means they are not inherently trusted and must be treated as potential sources of threats or vulnerabilities that the TCB is designed to protect against.
What are the two main considerations when designing a security solution concerning the TCB?,"When designing a security solution, there are two main considerations concerning the TCB: first, to assume all components inside the TCB are secure, provided there are valid justifications for this trust; and second, to prevent any damages from components that are outside of the TCB."
Why is it necessary to assume components inside the TCB are secure?,"It is necessary to assume components inside the TCB are secure because the TCB forms the foundation of trust for the entire cyber system. This assumption, however, must be backed by valid justifications, such as rigorous testing, formal verification, or secure design principles, to ensure the integrity of the security solution."
What is the role of a security solution regarding components outside the TCB?,"The role of a security solution regarding components outside the TCB is to prevent any damages that these potentially malicious or misbehaving components might cause. This involves implementing safeguards and controls to isolate, monitor, and restrict the actions of untrusted elements."
List and describe the design principles for the Trusted Computing Base (TCB).,"The design principles for the Trusted Computing Base (TCB) are: \n1. Unbypassable (completeness): This principle dictates that there must be no way to breach system security by bypassing the TCB. The TCB must be comprehensive in its control over security-critical operations. \n2. Tamper-resistant (security): The TCB should be protected against other parts outside the TCB. These external parts must not be able to modify the TCB's code or state, ensuring its integrity. \n3. Verifiable (or correctness): It should be possible to verify the correctness of the TCB. This means the TCB's design and implementation can be rigorously checked to ensure it functions as intended and meets its security objectives."
Explain the 'Unbypassable' principle in TCB design.,"The 'Unbypassable' principle, also known as completeness, in TCB design means that there must be no possible way to breach system security by circumventing or bypassing the Trusted Computing Base. The TCB must be the sole arbiter of security-critical operations, ensuring that all security-relevant actions pass through it."
What does 'Tamper-resistant' mean for TCB security?,"For TCB security, 'Tamper-resistant' means that the Trusted Computing Base should be protected against other parts of the system that are outside the TCB. These external parts must not be able to modify the TCB's code or its operational state, thereby preserving the integrity and reliability of the trusted components."
Describe the 'Verifiable' principle in the context of TCB correctness.,"The 'Verifiable' principle, also referred to as correctness, in the context of TCB design means that it should be possible to verify the correctness of the Trusted Computing Base. This implies that the TCB's design and implementation can be subjected to scrutiny and analysis to confirm that it behaves as specified and correctly enforces security policies."
What is the relationship between the size of the TCB and its trustworthiness?,"A system with a smaller Trusted Computing Base (TCB) is generally considered more trustworthy and easier to verify. This is because a smaller TCB requires fewer assumptions to be made, reducing the likelihood that those assumptions might be violated. This concept aligns with the KISS (Keep It Simple, Stupid) principle."
Explain the KISS principle as it applies to TCB size.,"The KISS (Keep It Simple, Stupid) principle, when applied to TCB size, suggests that a smaller Trusted Computing Base is preferable. A smaller TCB is inherently simpler, making it more trustworthy and easier to verify because there are fewer components to scrutinize and fewer assumptions that need to hold true, thus reducing the potential for errors or vulnerabilities."
What are the challenges associated with designing a secure system with a smaller TCB?,"While a smaller TCB is more trustworthy and easier to verify, designing a secure system with a smaller TCB is more challenging. This is because with a smaller TCB, one needs to consider a greater number of malicious entities outside the trusted core, requiring more robust mechanisms to prevent damage from these untrusted components."
Differentiate between an 'Active attacker' and a 'Passive attacker'.,"An 'Active attacker' is one who manipulates or disrupts systems, for example, by modifying data or injecting code. In contrast, a 'Passive attacker' focuses on observing and gathering information without interfering with the system's operation, such as eavesdropping on communications."
Describe the characteristics of an 'Active attacker'.,"An 'Active attacker' is characterized by their intent and capability to manipulate or disrupt systems. This includes actions such as modifying data, injecting malicious code, or otherwise interfering with the normal operation and integrity of the system."
What defines a 'Passive attacker'?,"A 'Passive attacker' is defined by their objective to observe and gather information without actively interfering with or disrupting the system. Their actions are typically covert, focusing on reconnaissance and data collection without leaving traces of modification."
What types of knowledge might an attacker possess?,"An attacker might possess various types of knowledge, ranging from knowing the system's design, architecture, and source code, to lacking detailed knowledge and having to rely on probing or trial and error to understand the system's workings."
How does an attacker's lack of detailed knowledge influence their approach?,"When an attacker lacks detailed knowledge of a system's design, architecture, or source code, they must rely on alternative approaches such as probing or trial and error. This involves systematically testing the system's responses to different inputs or interactions to gather information and identify vulnerabilities."
What factors determine an attacker's capability?,"An attacker's capability is determined by several factors, including how much computing resources they can leverage, what parts of the system they can interact with, and whether they have unlimited time or need to act quickly. These factors influence the scope and sophistication of their potential attacks."
Why is understanding an attacker's computing resources important in security planning?,"Understanding an attacker's computing resources is important in security planning because it helps assess the scale and complexity of attacks they might launch. For instance, an attacker with significant computing resources could perform brute-force attacks more effectively or deploy more sophisticated cryptographic attacks."
How do time constraints affect an attacker's strategy?,"Time constraints significantly affect an attacker's strategy. If an attacker has unlimited time, they can employ more patient and thorough methods like extensive reconnaissance, slow probing, or complex social engineering. Conversely, if they need to act quickly, they might resort to more direct, less subtle, or automated attacks that are easier to detect."
What does 'System design' refer to in the context of an attacker's knowledge?,"In the context of an attacker's knowledge, 'System design' refers to the high-level plan and structure of a computer system, including its components, modules, interfaces, and data flow. Knowledge of the system design can give an attacker a significant advantage in identifying potential vulnerabilities and planning attacks."
