input,output
Define a brute force attack in the context of password cracking.,A brute force guessing attack against passwords is a method where an attacker attempts to guess a password by systematically enumerating all possible passwords and their corresponding hashes in sequence. The attacker then checks if any of these generated hashes match the target hashes of the password they are trying to crack.
What is an effective measure to increase the difficulty of a brute force attack?,"An effective measure against a brute force attack is to increase the 'space of possible passwords'. This can be achieved by using longer passwords and allowing a greater variety of symbols, such as alphabets (both uppercase and lowercase), numerals, and special signs. Increasing the password space makes it computationally more intensive and time-consuming for an attacker to enumerate all possible combinations."
What role does password policy play in mitigating brute force attacks?,"Password policy is an important means to increase the difficulties of a brute force attack. By enforcing policies that require longer passwords and a wider range of character types (e.g., mixed case alphanumeric, special characters), the policy effectively expands the 'space of possible passwords', making it significantly harder and more time-consuming for an attacker to guess passwords through brute force."
How is password entropy measured according to the document?,"Password entropy is measured by 2^k, where 'k' represents the bitsize of the password space. The bitsize is the base-2 logarithm of the total number of possible passwords. A higher 'k' value indicates greater entropy and thus a more complex and secure password."
Explain the concept of 'bitsize of password space' as presented in the document.,"The 'bitsize of password space' refers to the base-2 logarithm of the total number of possible passwords for a given set of character combinations. If there are 'n' characters in a password and 'c' choices per character, the total number of possible passwords is c^n. The bitsize, 'k', is then calculated as log2(c^n), which can also be expressed as [lg(c^n)]/lg2."
How is the number of possible n-character passwords calculated given 'c' choices per character?,"The number of possible n-character passwords, given 'c' choices per character, is calculated as c^n. Here, 'c' represents the size of the character set (e.g., 26 for lowercase alphabets, 95 for keyboard characters), and 'n' represents the length of the password."
"What does 'k' represent in the context of password complexity, specifically in the expression 2^k?","In the expression 2^k, 'k' represents the 'bitsize of password space' or the complexity of the password. It is the base-2 logarithm of the total number of possible passwords. A higher 'k' value indicates a larger password space, meaning more possible combinations, which in turn makes the password more resistant to brute-force attacks."
Provide an example calculation for 'k' for 5-character lowercase passwords.,"For 5-character lowercase passwords, there are 26 choices per character (c=26) and the password length is 5 (n=5). The total number of possible passwords is 26^5. To find the complexity 'k', we solve 2^k = 26^5. This gives k = [lg(26^5)]/lg2, which equals 23.5. This means the bitsize of the password space for 5-character lowercase passwords is 23.5 bits."
What is the cracking speed of software password crackers mentioned in the document?,"At present, software password crackers can crack up to 16 million passwords per second per PC."
What is the bitsize of password space for a 10-character password using keyboard characters?,"According to Table 10.1, for a 10-character password ('n'=10) using keyboard characters (95 choices), the bitsize of the password space is 65.7."
What is the bitsize of password space for a 7-character password using mixed case alphanumeric characters?,"According to Table 10.1, for a 7-character password ('n'=7) using mixed case alphanumeric characters (62 choices), the bitsize of the password space is 41.7."
What is the bitsize of password space for a 9-character password using lowercase alphanumeric characters?,"According to Table 10.1, for a 9-character password ('n'=9) using lowercase alphanumeric characters (36 choices), the bitsize of the password space is 46.5."
How quickly can a 3GHz PC crack a password with 2^35 complexity?,"A 3GHz PC can crack a password with 2^35 complexity within a day, based on a generous estimate."
What is the cracking capability of an FPGA Hardware cracker mentioned in the document?,"An FPGA Hardware cracker can crack 56 bits within 5 days, according to the provided estimate."
How much faster are ASIC crackers compared to FPGA crackers?,ASIC crackers can be more than 10 times faster than FPGA crackers.
Define a dictionary attack.,"A dictionary attack is a method of cracking hashed passwords that exploits weaknesses in human-chosen passwords. These passwords often tend to derive from words found in natural languages or commonly used phrases. The attack involves guessing commonly used passwords, computing their hash values, and then looking for matches against the stored hash values in a password file."
How does choosing passwords with high entropy relate to brute-force attacks?,"Choosing passwords with high entropy prevents brute-force attacks. High entropy means the password has a large number of possible combinations, making it extremely difficult and time-consuming for a brute-force attacker to guess it by enumerating all possibilities."
"Are hashed passwords vulnerable to dictionary attacks, especially human-generated ones?","Yes, hashed passwords, especially those that are human-generated, are still vulnerable to dictionary attacks. This is because human-chosen passwords often derive from words in natural languages, which can be found in dictionaries or lists of common passwords, making them susceptible even when hashed."
Why are human-chosen passwords vulnerable to dictionary attacks?,"Human-chosen passwords are vulnerable to dictionary attacks because they tend to derive from words in natural languages. This inherent weakness allows attackers to compile lists of common words and phrases (dictionaries) and use them to guess passwords, even if they are hashed."
Describe the process of a dictionary attack.,"The process of a dictionary attack involves three main steps: first, guessing some commonly used passwords; second, computing the hash values of these guessed passwords; and third, looking for the same hash values in the target password file. If a match is found, the original password is revealed."
What is the implication if multiple users have the same password in the context of a dictionary attack?,"If multiple users have the same password, they will also have the same hash value stored in the password file. This means that once a dictionary attack successfully identifies the hash for a common password, it can potentially compromise multiple user accounts simultaneously if they share that same password."
What is a pre-computed hash table?,A pre-computed hash table is a data structure used as a strategy for cracking hashed passwords. It contains a collection of pre-calculated pairs of passwords and their corresponding hash values. Attackers can use this table to quickly look up the original password by matching a target hash to a hash stored in the table.
What is the strategy for cracking hashed passwords using a pre-computed hash table?,"The strategy for cracking hashed passwords using a pre-computed hash table involves pre-computing a large table that contains pairs of passwords and their hashes. When an attacker obtains a hashed password, they can then look up this hash in the pre-computed table to find the corresponding original password."
What does a pre-computed hash table contain?,A pre-computed hash table contains pairs of passwords and their corresponding hash values. These pairs are generated in advance to facilitate rapid lookup during an attack.
What is the size of a pre-computed hash table if there are 'k' password candidates and each hash has 'n' bits?,"If there are 'k' password candidates and each hash has 'n' bits, then the size of the pre-computed hash table would be k × n. This represents the total storage required for all the password-hash pairs."
Under what condition might a pre-computed hash table not be practical?,"A pre-computed hash table may not be practical if 'k' is large. 'k' represents the number of password candidates. If the number of password candidates is very large, the resulting table size (k × n) would be enormous, making it impractical to store and manage."
What is password salting?,"Password salting is a technique used to reduce the effectiveness of offline attacks using pre-computed hashes. It involves adding a unique, random string, known as a 'salt', to a password before applying the hash function. The salt value is then stored along with the hash of the password+salt."
What is the primary purpose of adding a salt to a password?,"The primary purpose of adding a salt to a password is to reduce the effectiveness of offline attacks that utilize pre-computed hashes, such as rainbow tables. By making each password's hash unique, even if two users have the same password, salting prevents attackers from using a single pre-computed table to crack multiple passwords."
When is a salt added in the password hashing process?,A salt is added to a password *before* applying the hash function. This means the hash function operates on the combined string of the password and its unique salt.
What is a salt in the context of password security?,"In the context of password security, a salt is a random string that is added to a password before it is hashed. It is unique for each password, meaning each password has its own salt. The salt value is stored alongside the resulting hash of the password+salt."
Does each password have its own salt?,"Yes, each password has its own unique salt. This is a key characteristic of password salting, as it ensures that even identical passwords will produce different hash values when salted and hashed."
Where is the salt value stored after it's used in hashing?,The salt value is stored along with the hash of the password+salt. This allows the system to retrieve the correct salt when verifying a user's password by combining it with the entered password before hashing and comparing.
How does salting affect an attacker's effort when trying to pre-compute hashes for a salt of 'n' bits?,"For a salt of 'n' bits, the attacker needs to pre-compute 2^n of hashes for the *same password*. This significantly increases the computational burden for the attacker because they cannot use a single pre-computed table for all passwords; instead, they would need to generate a separate table for each possible salt value, making pre-computation impractical."
Why is it essential to store passwords in a way that prevents them from being obtained by an attacker?,"It is essential to store passwords in a way that prevents them from being obtained by an attacker even if the application or database is compromised. This is crucial for maintaining the security of user accounts and protecting sensitive information, as compromised passwords can lead to unauthorized access and further breaches."
What happens after an attacker has acquired stored password hashes?,"After an attacker has acquired stored password hashes, they are always able to brute force these hashes offline. This means they can attempt to crack the passwords without needing to interact with the live system, making it a persistent threat."
What is a defender's strategy to slow down offline password attacks?,"As a defender, it is only possible to slow down offline attacks by selecting hash algorithms that are as resource-intensive as possible. This increases the time and computational power required for an attacker to brute force the acquired hashes, buying time for detection and mitigation."
What kind of hash algorithms should be selected to slow down offline attacks?,"To slow down offline attacks, hash algorithms that are as resource-intensive as possible should be selected. These algorithms are designed to be computationally expensive, making it more difficult and time-consuming for attackers to perform brute-force or dictionary attacks on acquired password hashes."
Can offline password attacks be prevented entirely?,"No, offline password attacks cannot be prevented entirely once an attacker has acquired stored password hashes. The document states that attackers are *always* able to brute force hashes offline. The defender's goal is to slow down these attacks rather than prevent them outright."
What is the bitsize of password space for a 5-character password using lowercase alphanumeric characters?,"According to Table 10.1, for a 5-character password ('n'=5) using lowercase alphanumeric characters (36 choices), the bitsize of the password space is 25.9."
What is the bitsize of password space for a 6-character password using mixed case alphanumeric characters?,"According to Table 10.1, for a 6-character password ('n'=6) using mixed case alphanumeric characters (62 choices), the bitsize of the password space is 35.7."
What is the bitsize of password space for an 8-character password using keyboard characters?,"According to Table 10.1, for an 8-character password ('n'=8) using keyboard characters (95 choices), the bitsize of the password space is 52.6."
What is the bitsize of password space for a 9-character password using mixed case alphanumeric characters?,"According to Table 10.1, for a 9-character password ('n'=9) using mixed case alphanumeric characters (62 choices), the bitsize of the password space is 53.6."
What is the bitsize of password space for a 10-character password using lowercase alphanumeric characters?,"According to Table 10.1, for a 10-character password ('n'=10) using lowercase alphanumeric characters (36 choices), the bitsize of the password space is 51.7."
What is the bitsize of password space for a 6-character password using lowercase characters?,"According to Table 10.1, for a 6-character password ('n'=6) using lowercase characters (26 choices), the bitsize of the password space is 28.2."
What is the bitsize of password space for a 7-character password using lowercase characters?,"According to Table 10.1, for a 7-character password ('n'=7) using lowercase characters (26 choices), the bitsize of the password space is 32.9."
What is the bitsize of password space for an 8-character password using lowercase alphanumeric characters?,"According to Table 10.1, for an 8-character password ('n'=8) using lowercase alphanumeric characters (36 choices), the bitsize of the password space is 41.4."
What is the bitsize of password space for a 5-character password using mixed case alphanumeric characters?,"According to Table 10.1, for a 5-character password ('n'=5) using mixed case alphanumeric characters (62 choices), the bitsize of the password space is 29.8."
What is the bitsize of password space for a 6-character password using keyboard characters?,"According to Table 10.1, for a 6-character password ('n'=6) using keyboard characters (95 choices), the bitsize of the password space is 39.4."
What is the bitsize of password space for a 7-character password using keyboard characters?,"According to Table 10.1, for a 7-character password ('n'=7) using keyboard characters (95 choices), the bitsize of the password space is 46.0."
What is the bitsize of password space for an 8-character password using mixed case alphanumeric characters?,"According to Table 10.1, for an 8-character password ('n'=8) using mixed case alphanumeric characters (62 choices), the bitsize of the password space is 47.6."
